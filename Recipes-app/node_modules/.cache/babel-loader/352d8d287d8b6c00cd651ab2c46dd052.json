{"ast":null,"code":"var _jsxFileName = \"/home/gregory/projetos/sd-016-a-project-recipes-app/src/pages/doneRecipes/DoneRecipes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport copy from 'clipboard-copy';\nimport { Link } from 'react-router-dom';\nimport Header from '../../components/header/Header';\nimport shareIcon from '../../images/shareIcon.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DoneRecipes() {\n  _s();\n\n  const [doneRecipesLocal, setDoneRecipesLocal] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('');\n\n  const filterByCategory = category => {\n    console.log(category);\n    setSelectedCategory(category);\n  };\n\n  useEffect(() => {\n    const getRecipesLocalstorage = () => {\n      const dataLocalstorage = localStorage.getItem('doneRecipes');\n      const dataLocal = JSON.parse(dataLocalstorage);\n      setDoneRecipesLocal(dataLocal);\n    };\n\n    getRecipesLocalstorage();\n  }, []);\n  const [linkCopy, setLinkCopy] = useState(false);\n\n  const linkC = value => {\n    if (value.type === 'food') {\n      const link = `http://localhost:3000/foods/${value.id}`;\n      copy(link);\n      setLinkCopy(true);\n    }\n\n    if (value.type === 'drink') {\n      const link = `http://localhost:3000/drinks/${value.id}`;\n      copy(link);\n      setLinkCopy(true);\n    }\n  };\n\n  const redirectByid = value => {\n    if (value.type === 'food') {\n      return `foods/${value.id}`;\n    }\n\n    if (value.type === 'drink') {\n      return `drinks/${value.id}`;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        label: \"Done Recipes\",\n        testid: \"page-title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"data-testid\": \"filter-by-all-btn\",\n        name: \"\",\n        onClick: _ref => {\n          let {\n            target: {\n              name\n            }\n          } = _ref;\n          return filterByCategory(name);\n        },\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"data-testid\": \"filter-by-food-btn\",\n        name: \"food\",\n        onClick: _ref2 => {\n          let {\n            target: {\n              name\n            }\n          } = _ref2;\n          return filterByCategory(name);\n        },\n        children: \"Food\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"data-testid\": \"filter-by-drink-btn\",\n        name: \"drink\",\n        onClick: _ref3 => {\n          let {\n            target: {\n              name\n            }\n          } = _ref3;\n          return filterByCategory(name);\n        },\n        children: \"Drinks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), doneRecipesLocal && doneRecipesLocal.filter(recipe => recipe.type.includes(selectedCategory)).map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: () => redirectByid(value),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: value.image,\n          \"data-testid\": `${index}-horizontal-image`,\n          alt: value.name,\n          width: \"200px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        \"data-testid\": `${index}-horizontal-top-text`,\n        children: value.type === 'food' ? `${value.nationality} - ${value.category}` : value.alcoholicOrNot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: () => redirectByid(value),\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          \"data-testid\": `${index}-horizontal-name`,\n          children: value.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        \"data-testid\": `${index}-horizontal-done-date`,\n        children: value.doneDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }, this), value.tags.length > 1 ? value && value.tags.map((tag, i) => /*#__PURE__*/_jsxDEV(\"h3\", {\n        \"data-testid\": `${index}-${tag}-horizontal-tag`,\n        children: tag\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }, this)) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: value.tags\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => linkC(value),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          \"data-testid\": `${index}-horizontal-share-btn`,\n          src: shareIcon,\n          alt: \"share icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }, this), linkCopy ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Link copied!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 28\n      }, this) : null]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DoneRecipes, \"58DtkvK9BDn5RscMOJIAOh0Pqlc=\");\n\n_c = DoneRecipes;\nexport default DoneRecipes;\n\nvar _c;\n\n$RefreshReg$(_c, \"DoneRecipes\");","map":{"version":3,"sources":["/home/gregory/projetos/sd-016-a-project-recipes-app/src/pages/doneRecipes/DoneRecipes.js"],"names":["React","useState","useEffect","copy","Link","Header","shareIcon","DoneRecipes","doneRecipesLocal","setDoneRecipesLocal","selectedCategory","setSelectedCategory","filterByCategory","category","console","log","getRecipesLocalstorage","dataLocalstorage","localStorage","getItem","dataLocal","JSON","parse","linkCopy","setLinkCopy","linkC","value","type","link","id","redirectByid","target","name","filter","recipe","includes","map","index","image","nationality","alcoholicOrNot","doneDate","tags","length","tag","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport copy from 'clipboard-copy';\nimport { Link } from 'react-router-dom';\nimport Header from '../../components/header/Header';\nimport shareIcon from '../../images/shareIcon.svg';\n\nfunction DoneRecipes() {\n  const [doneRecipesLocal, setDoneRecipesLocal] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('');\n\n  const filterByCategory = (category) => {\n    console.log(category);\n    setSelectedCategory(category);\n  };\n\n  useEffect(() => {\n    const getRecipesLocalstorage = () => {\n      const dataLocalstorage = localStorage.getItem('doneRecipes');\n      const dataLocal = JSON.parse(dataLocalstorage);\n      setDoneRecipesLocal(dataLocal);\n    };\n    getRecipesLocalstorage();\n  }, []);\n\n  const [linkCopy, setLinkCopy] = useState(false);\n  const linkC = (value) => {\n    if (value.type === 'food') {\n      const link = `http://localhost:3000/foods/${value.id}`;\n      copy(link);\n      setLinkCopy(true);\n    }\n    if (value.type === 'drink') {\n      const link = `http://localhost:3000/drinks/${value.id}`;\n      copy(link);\n      setLinkCopy(true);\n    }\n  };\n\n  const redirectByid = (value) => {\n    if (value.type === 'food') {\n      return `foods/${value.id}`;\n    }\n    if (value.type === 'drink') {\n      return `drinks/${value.id}`;\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <Header\n          label=\"Done Recipes\"\n          testid=\"page-title\"\n        />\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-all-btn\"\n          name=\"\"\n          onClick={ ({ target: { name } }) => filterByCategory(name) }\n        >\n          All\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-food-btn\"\n          name=\"food\"\n          onClick={ ({ target: { name } }) => filterByCategory(name) }\n        >\n          Food\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-drink-btn\"\n          name=\"drink\"\n          onClick={ ({ target: { name } }) => filterByCategory(name) }\n        >\n          Drinks\n        </button>\n      </div>\n      { doneRecipesLocal && (\n        doneRecipesLocal\n          .filter((recipe) => (recipe.type.includes(selectedCategory)))\n          .map((value, index) => (\n            <div key={ index }>\n              <Link\n                to={ () => redirectByid(value) }\n              >\n                <img\n                  src={ value.image }\n                  data-testid={ `${index}-horizontal-image` }\n                  alt={ value.name }\n                  width=\"200px\"\n                />\n              </Link>\n              <h3\n                data-testid={ `${index}-horizontal-top-text` }\n              >\n                {value.type === 'food'\n                  ? `${value.nationality} - ${value.category}` : value.alcoholicOrNot }\n              </h3>\n              <Link\n                to={ () => redirectByid(value) }\n              >\n                <h3\n                  data-testid={ `${index}-horizontal-name` }\n                >\n                  {value.name}\n                </h3>\n              </Link>\n              <h3\n                data-testid={ `${index}-horizontal-done-date` }\n              >\n                { value.doneDate }\n              </h3>\n              { value.tags.length > 1\n                ? value && value.tags.map((tag, i) => (\n                  <h3\n                    key={ i }\n                    data-testid={ `${index}-${tag}-horizontal-tag` }\n                  >\n                    { tag }\n                  </h3>\n                )) : <h3>{value.tags}</h3>}\n              <button\n                type=\"button\"\n                onClick={ () => linkC(value) }\n              >\n                <img\n                  data-testid={ `${index}-horizontal-share-btn` }\n                  src={ shareIcon }\n                  alt=\"share icon\"\n                />\n              </button>\n              { linkCopy ? <p>Link copied!</p> : null }\n            </div>\n          ))) }\n    </div>\n  );\n}\n\nexport default DoneRecipes;\n"]},"metadata":{},"sourceType":"module"}