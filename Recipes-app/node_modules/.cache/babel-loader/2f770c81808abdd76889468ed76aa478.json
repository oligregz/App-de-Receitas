{"ast":null,"code":"var _jsxFileName = \"/home/gregory/projetos/sd-016-a-project-recipes-app/src/pages/progressFoods/ProgressFoods.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport fetchAPI from '../../services/fetchAPI';\nimport IngredientsCheck from '../../components/IngredientsCheck/IngredientsCheck';\nimport GlobalContext from '../../context/GlobalContext';\nimport { filterIngredientsFunc, filterMeasuresFunc } from '../detailFoods/FuncDetailFoods';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProgressFoods(_ref) {\n  _s();\n\n  let {\n    match\n  } = _ref;\n  const [returnAPI, setReturnAPI] = useState('');\n  const [checkboxList, setCheckboxList] = useState({});\n  const {\n    handleRecipeStarted\n  } = useContext(GlobalContext);\n  const {\n    params: {\n      id\n    }\n  } = match;\n  useEffect(() => {\n    const returnFetchApi = async () => {\n      const result = await fetchAPI('fetchMealById', id);\n      setReturnAPI(result);\n    };\n\n    returnFetchApi();\n  }, [id]);\n  useEffect(() => {\n    const ingredientListCreator = async () => {\n      const result = await fetchAPI('fetchMealById', id);\n      const getRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n      const ingredientList = filterIngredientsFunc(result);\n\n      if (!getRecipes || Object.keys(getRecipes.meals[id]).length === 0) {\n        const state = ingredientList.reduce((obj, ingredient) => ({ ...obj,\n          [ingredient]: false\n        }), {});\n        setCheckboxList(state);\n        handleRecipeStarted(result.meals[0], state);\n      } else {\n        setCheckboxList(getRecipes.meals[id]);\n      }\n    };\n\n    ingredientListCreator();\n  }, []);\n  const history = useHistory();\n\n  function redirectFinish() {\n    history.push('/done-recipes');\n    const arrayRecipeDone = localStorage.getItem('doneRecipes');\n    const now = new Date();\n    const dataDoneRecipe = `${now.getDate()}/${now.getMonth()}/${now.getFullYear()}`;\n    const {\n      idMeal,\n      strCategory,\n      strMeal,\n      strMealThumb,\n      strTags,\n      strArea\n    } = returnAPI.meals[0];\n    const tagsArray = strTags.split(',');\n    const doneRecipes = {\n      id: idMeal,\n      type: 'food',\n      category: strCategory,\n      alcoholicOrNot: '',\n      name: strMeal,\n      image: strMealThumb,\n      doneDate: dataDoneRecipe,\n      tags: tagsArray,\n      nationality: strArea\n    };\n    const doneRecipesLocalstorage = arrayRecipeDone ? [...JSON.parse(arrayRecipeDone), doneRecipes] : [doneRecipes];\n    localStorage.setItem('doneRecipes', JSON.stringify(doneRecipesLocalstorage));\n  }\n\n  const handleChangeCheckBox = _ref2 => {\n    let {\n      target\n    } = _ref2;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const getRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const ingredientList = getRecipes.meals[id];\n    const obj = { ...ingredientList,\n      [target.name]: value\n    };\n    setCheckboxList(obj);\n    handleRecipeStarted(returnAPI.meals[0], obj);\n  };\n\n  const finishRecipeIsDisabled = () => Object.values(checkboxList).every(ingredient => ingredient);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: returnAPI && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Foods in Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        \"data-testid\": \"recipe-photo\",\n        alt: \"Img\",\n        src: returnAPI.meals[0].strMealThumb,\n        width: \"200px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        \"data-testid\": \"recipe-title\",\n        children: returnAPI.meals[0].strMeal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        \"data-testid\": \"recipe-category\",\n        children: returnAPI.meals[0].strCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"data-testid\": \"share-btn\",\n        children: \"Share\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"data-testid\": \"favorite-btn\",\n        children: \"Favorite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"instructions\",\n        children: returnAPI.meals[0].strInstructions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this), Object.values(checkboxList).length > 0 && /*#__PURE__*/_jsxDEV(IngredientsCheck, {\n        ingredients: filterIngredientsFunc(returnAPI),\n        measures: filterMeasuresFunc(returnAPI),\n        handleChange: handleChangeCheckBox,\n        checkboxList: checkboxList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"data-testid\": \"finish-recipe-btn\",\n        className: \"finish-food-btn\",\n        onClick: () => redirectFinish(),\n        disabled: !finishRecipeIsDisabled(),\n        children: \"Finish Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProgressFoods, \"tAojds5beqPncPVCvwQ1tNlYCC8=\", false, function () {\n  return [useHistory];\n});\n\n_c = ProgressFoods;\nProgressFoods.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    })\n  })\n};\nProgressFoods.defaultProps = {\n  match: {}\n};\nexport default ProgressFoods;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProgressFoods\");","map":{"version":3,"sources":["/home/gregory/projetos/sd-016-a-project-recipes-app/src/pages/progressFoods/ProgressFoods.js"],"names":["React","useState","useEffect","useContext","PropTypes","useHistory","fetchAPI","IngredientsCheck","GlobalContext","filterIngredientsFunc","filterMeasuresFunc","ProgressFoods","match","returnAPI","setReturnAPI","checkboxList","setCheckboxList","handleRecipeStarted","params","id","returnFetchApi","result","ingredientListCreator","getRecipes","JSON","parse","localStorage","getItem","ingredientList","Object","keys","meals","length","state","reduce","obj","ingredient","history","redirectFinish","push","arrayRecipeDone","now","Date","dataDoneRecipe","getDate","getMonth","getFullYear","idMeal","strCategory","strMeal","strMealThumb","strTags","strArea","tagsArray","split","doneRecipes","type","category","alcoholicOrNot","name","image","doneDate","tags","nationality","doneRecipesLocalstorage","setItem","stringify","handleChangeCheckBox","target","value","checked","finishRecipeIsDisabled","values","every","strInstructions","propTypes","shape","string","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport fetchAPI from '../../services/fetchAPI';\nimport IngredientsCheck from '../../components/IngredientsCheck/IngredientsCheck';\nimport GlobalContext from '../../context/GlobalContext';\n\nimport {\n  filterIngredientsFunc,\n  filterMeasuresFunc,\n} from '../detailFoods/FuncDetailFoods';\n\nfunction ProgressFoods({ match }) {\n  const [returnAPI, setReturnAPI] = useState('');\n  const [checkboxList, setCheckboxList] = useState({});\n  const {\n    handleRecipeStarted,\n  } = useContext(GlobalContext);\n\n  const { params: { id } } = match;\n\n  useEffect(() => {\n    const returnFetchApi = async () => {\n      const result = await fetchAPI('fetchMealById', id);\n      setReturnAPI(result);\n    };\n    returnFetchApi();\n  }, [id]);\n\n  useEffect(() => {\n    const ingredientListCreator = async () => {\n      const result = await fetchAPI('fetchMealById', id);\n      const getRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n      const ingredientList = filterIngredientsFunc(result);\n      if (!getRecipes || Object.keys(getRecipes.meals[id]).length === 0) {\n        const state = ingredientList.reduce((obj, ingredient) => ({\n          ...obj,\n          [ingredient]: false,\n        }), {});\n        setCheckboxList(state);\n        handleRecipeStarted(result.meals[0], state);\n      } else {\n        setCheckboxList(getRecipes.meals[id]);\n      }\n    };\n    ingredientListCreator();\n  }, []);\n\n  const history = useHistory();\n  function redirectFinish() {\n    history.push('/done-recipes');\n    const arrayRecipeDone = localStorage.getItem('doneRecipes');\n    const now = new Date();\n    const dataDoneRecipe = `${now.getDate()}/${now.getMonth()}/${now.getFullYear()}`;\n    const {\n      idMeal, strCategory, strMeal, strMealThumb, strTags, strArea,\n    } = returnAPI.meals[0];\n    const tagsArray = strTags.split(',');\n    const doneRecipes = {\n      id: idMeal,\n      type: 'food',\n      category: strCategory,\n      alcoholicOrNot: '',\n      name: strMeal,\n      image: strMealThumb,\n      doneDate: dataDoneRecipe,\n      tags: tagsArray,\n      nationality: strArea,\n    };\n\n    const doneRecipesLocalstorage = arrayRecipeDone\n      ? [...JSON.parse(arrayRecipeDone), doneRecipes] : [doneRecipes];\n    localStorage.setItem('doneRecipes',\n      JSON.stringify(doneRecipesLocalstorage));\n  }\n\n  const handleChangeCheckBox = ({ target }) => {\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const getRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const ingredientList = getRecipes.meals[id];\n    const obj = {\n      ...ingredientList,\n      [target.name]: value,\n    };\n    setCheckboxList(obj);\n    handleRecipeStarted(returnAPI.meals[0], obj);\n  };\n\n  const finishRecipeIsDisabled = () => Object.values(checkboxList)\n    .every((ingredient) => ingredient);\n\n  return (\n    <div>\n      {\n        returnAPI\n        && (\n          <div>\n            <h2>Foods in Progress</h2>\n            <img\n              data-testid=\"recipe-photo\"\n              alt=\"Img\"\n              src={ returnAPI.meals[0].strMealThumb }\n              width=\"200px\"\n            />\n            <h2 data-testid=\"recipe-title\">{returnAPI.meals[0].strMeal}</h2>\n\n            <h4 data-testid=\"recipe-category\">{returnAPI.meals[0].strCategory}</h4>\n\n            <button\n              type=\"button\"\n              data-testid=\"share-btn\"\n            >\n              Share\n            </button>\n\n            <button\n              type=\"button\"\n              data-testid=\"favorite-btn\"\n            >\n              Favorite\n            </button>\n\n            <p data-testid=\"instructions\">{returnAPI.meals[0].strInstructions}</p>\n\n            {Object.values(checkboxList).length > 0 && (\n              <IngredientsCheck\n                ingredients={ filterIngredientsFunc(returnAPI) }\n                measures={ filterMeasuresFunc(returnAPI) }\n                handleChange={ handleChangeCheckBox }\n                checkboxList={ checkboxList }\n              />\n            )}\n\n            <button\n              type=\"button\"\n              data-testid=\"finish-recipe-btn\"\n              className=\"finish-food-btn\"\n              onClick={ () => redirectFinish() }\n              disabled={ !finishRecipeIsDisabled() }\n            >\n              Finish Recipe\n            </button>\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nProgressFoods.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }),\n};\n\nProgressFoods.defaultProps = {\n  match: {},\n};\n\nexport default ProgressFoods;\n"]},"metadata":{},"sourceType":"module"}