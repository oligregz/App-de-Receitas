{"ast":null,"code":"var _jsxFileName = \"/home/gregory/projetos/sd-016-a-project-recipes-app/src/pages/detailFoods/DetailFoods.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport shareImg from '../../images/shareIcon.svg';\nimport whiteHeartIcon from '../../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\nimport Button from '../../components/button/Button';\nimport IngredientsList from '../../components/ingredientList/IngredientList';\nimport fetchAPI from '../../services/fetchAPI';\nimport RecomendationCard from '../../components/recomendationCard/RecomendationCard';\nimport './DetailFood.css';\nimport { filterIngredientsFunc, filterMeasuresFunc, youtubeLinkConverter } from './FuncDetailFoods';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CUT = '/foods/';\n\nfunction DetailFoods() {\n  _s();\n\n  const [returnAPI, setReturnAPI] = useState('');\n  const location = useLocation();\n  const sliceLocationId = location.pathname.split(CUT)[1];\n  useEffect(() => {\n    const returnFetchApi = async () => {\n      const result = await fetchAPI('fetchMealById', sliceLocationId);\n      setReturnAPI(result);\n    };\n\n    returnFetchApi();\n  }, [sliceLocationId]);\n  const [linkCopy, setLinkCopy] = useState(false);\n\n  const linkC = () => {\n    copy(window.location.href);\n    setLinkCopy(true);\n  };\n\n  const history = useHistory();\n  const [favoriteButt, setFavoriteButt] = useState(false);\n\n  const favoriteFood = () => {\n    const arrayRecipe = localStorage.getItem('favoriteRecipes');\n    const {\n      idMeal,\n      strArea,\n      strCategory,\n      strMeal,\n      strMealThumb\n    } = returnAPI.meals[0];\n    const newRecipe = {\n      id: idMeal,\n      type: 'food',\n      nationality: strArea,\n      category: strCategory,\n      alcoholicOrNot: '',\n      name: strMeal,\n      image: strMealThumb\n    };\n    const favoriteRecipes = arrayRecipe ? [...JSON.parse(arrayRecipe), newRecipe] : [newRecipe];\n    localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteRecipes));\n  };\n\n  const removeFavoriteFood = () => {\n    const newRecipe = '';\n    localStorage.setItem('favoriteRecipes', JSON.stringify(...newRecipe, newRecipe));\n  };\n\n  useEffect(() => {\n    const verifyIdLocalstorage = () => {\n      const getRecipeLocalstorage = localStorage.getItem('favoriteRecipes');\n      const recipeIdLocalstorage = JSON.parse(getRecipeLocalstorage);\n\n      if (returnAPI && recipeIdLocalstorage) {\n        recipeIdLocalstorage.map(value => returnAPI.meals[0].idMeal === value.id && setFavoriteButt(true));\n      }\n    };\n\n    verifyIdLocalstorage();\n  }, [returnAPI]); // isFavorite\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: returnAPI && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        \"data-testid\": \"recipe-photo\",\n        src: returnAPI.meals[0].strMealThumb,\n        alt: \"img\",\n        width: \"200px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"title\", {\n        \"data-testid\": \"recipe-title\",\n        children: returnAPI.meals[0].strMeal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": \"share-btn\",\n        type: \"button\",\n        onClick: linkC,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: shareImg,\n          alt: \"share icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), linkCopy ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Link copied!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 26\n      }, this) : null, !favoriteButt ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          favoriteFood();\n          setFavoriteButt(true);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          \"data-testid\": \"favorite-btn\",\n          src: whiteHeartIcon,\n          alt: \"whiteHeartIcon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          removeFavoriteFood();\n          setFavoriteButt(false);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          \"data-testid\": \"favorite-btn\",\n          src: blackHeartIcon,\n          alt: \"blackHeartIcon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"recipe-category\",\n        children: returnAPI.meals[0].strCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(IngredientsList, {\n        ingredients: filterIngredientsFunc(returnAPI),\n        measures: filterMeasuresFunc(returnAPI)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-testid\": \"instructions\",\n        children: returnAPI.meals[0].strInstructions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-testid\": \"video\",\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          width: \"450\",\n          height: \"280\",\n          src: youtubeLinkConverter(returnAPI),\n          frameBorder: \"0\",\n          allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n          allowFullScreen: true,\n          title: \"Embedded youtube\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        testid: \"start-recipe-btn\",\n        label: \"Start Recipe\",\n        type: \"button\",\n        className: \"buttonstart\",\n        onClick: () => history.push(`/foods/${sliceLocationId}/in-progress`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RecomendationCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DetailFoods, \"QgxkFgo++XLtksdh3dM+fPj6LlU=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = DetailFoods;\nexport default DetailFoods;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailFoods\");","map":{"version":3,"sources":["/home/gregory/projetos/sd-016-a-project-recipes-app/src/pages/detailFoods/DetailFoods.js"],"names":["React","useState","useEffect","useLocation","useHistory","copy","shareImg","whiteHeartIcon","blackHeartIcon","Button","IngredientsList","fetchAPI","RecomendationCard","filterIngredientsFunc","filterMeasuresFunc","youtubeLinkConverter","CUT","DetailFoods","returnAPI","setReturnAPI","location","sliceLocationId","pathname","split","returnFetchApi","result","linkCopy","setLinkCopy","linkC","window","href","history","favoriteButt","setFavoriteButt","favoriteFood","arrayRecipe","localStorage","getItem","idMeal","strArea","strCategory","strMeal","strMealThumb","meals","newRecipe","id","type","nationality","category","alcoholicOrNot","name","image","favoriteRecipes","JSON","parse","setItem","stringify","removeFavoriteFood","verifyIdLocalstorage","getRecipeLocalstorage","recipeIdLocalstorage","map","value","strInstructions","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport shareImg from '../../images/shareIcon.svg';\nimport whiteHeartIcon from '../../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\nimport Button from '../../components/button/Button';\nimport IngredientsList from '../../components/ingredientList/IngredientList';\nimport fetchAPI from '../../services/fetchAPI';\nimport RecomendationCard from '../../components/recomendationCard/RecomendationCard';\nimport './DetailFood.css';\nimport {\n  filterIngredientsFunc,\n  filterMeasuresFunc,\n  youtubeLinkConverter } from './FuncDetailFoods';\n\nconst CUT = '/foods/';\nfunction DetailFoods() {\n  const [returnAPI, setReturnAPI] = useState('');\n  const location = useLocation();\n  const sliceLocationId = location.pathname.split(CUT)[1];\n  useEffect(() => {\n    const returnFetchApi = async () => {\n      const result = await fetchAPI('fetchMealById', sliceLocationId);\n      setReturnAPI(result);\n    };\n    returnFetchApi();\n  }, [sliceLocationId]);\n\n  const [linkCopy, setLinkCopy] = useState(false);\n  const linkC = () => {\n    copy(window.location.href);\n    setLinkCopy(true);\n  };\n\n  const history = useHistory();\n  const [favoriteButt, setFavoriteButt] = useState(false);\n\n  const favoriteFood = () => {\n    const arrayRecipe = localStorage.getItem('favoriteRecipes');\n    const { idMeal, strArea, strCategory, strMeal, strMealThumb } = returnAPI.meals[0];\n    const newRecipe = {\n      id: idMeal,\n      type: 'food',\n      nationality: strArea,\n      category: strCategory,\n      alcoholicOrNot: '',\n      name: strMeal,\n      image: strMealThumb,\n    };\n    const favoriteRecipes = arrayRecipe\n      ? [...JSON.parse(arrayRecipe), newRecipe] : [newRecipe];\n\n    localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteRecipes));\n  };\n\n  const removeFavoriteFood = () => {\n    const newRecipe = '';\n    localStorage.setItem('favoriteRecipes', JSON.stringify(...newRecipe, newRecipe));\n  };\n\n  useEffect(() => {\n    const verifyIdLocalstorage = () => {\n      const getRecipeLocalstorage = localStorage.getItem('favoriteRecipes');\n      const recipeIdLocalstorage = JSON.parse(getRecipeLocalstorage);\n      if (returnAPI && recipeIdLocalstorage) {\n        recipeIdLocalstorage.map((value) => returnAPI.meals[0].idMeal === value.id\n          && setFavoriteButt(true));\n      }\n    };\n    verifyIdLocalstorage();\n  }, [returnAPI]); // isFavorite\n  return (\n    <div>\n      {\n        returnAPI\n        && (\n          <div>\n            <img\n              data-testid=\"recipe-photo\"\n              src={ returnAPI.meals[0].strMealThumb }\n              alt=\"img\"\n              width=\"200px\"\n            />\n            <title\n              data-testid=\"recipe-title\"\n            >\n              { returnAPI.meals[0].strMeal }\n            </title>\n            <button\n              data-testid=\"share-btn\"\n              type=\"button\"\n              onClick={ linkC }\n            >\n              <img src={ shareImg } alt=\"share icon\" />\n            </button>\n            { linkCopy ? <p>Link copied!</p> : null }\n            { !favoriteButt\n              ? (\n                <button\n                  type=\"button\"\n                  onClick={ () => {\n                    favoriteFood();\n                    setFavoriteButt(true);\n                  } }\n                >\n                  <img\n                    data-testid=\"favorite-btn\"\n                    src={ whiteHeartIcon }\n                    alt=\"whiteHeartIcon\"\n                  />\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  onClick={ () => {\n                    removeFavoriteFood();\n                    setFavoriteButt(false);\n                  } }\n                >\n                  <img\n                    data-testid=\"favorite-btn\"\n                    src={ blackHeartIcon }\n                    alt=\"blackHeartIcon\"\n                  />\n                </button>\n              ) }\n            <p data-testid=\"recipe-category\">{ returnAPI.meals[0].strCategory }</p>\n            <IngredientsList\n              ingredients={ filterIngredientsFunc(returnAPI) }\n              measures={ filterMeasuresFunc(returnAPI) }\n            />\n            <div data-testid=\"instructions\">\n              { returnAPI.meals[0].strInstructions }\n            </div>\n            <div data-testid=\"video\">\n              <iframe\n                width=\"450\"\n                height=\"280\"\n                src={ youtubeLinkConverter(returnAPI) }\n                frameBorder=\"0\"\n                allow=\"accelerometer; autoplay;\n                clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen\n                title=\"Embedded youtube\"\n              />\n            </div>\n            <Button\n              testid=\"start-recipe-btn\"\n              label=\"Start Recipe\"\n              type=\"button\"\n              className=\"buttonstart\"\n              onClick={ () => history.push(`/foods/${sliceLocationId}/in-progress`) }\n            />\n            <RecomendationCard />\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nexport default DetailFoods;\n"]},"metadata":{},"sourceType":"module"}