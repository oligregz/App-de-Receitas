{"ast":null,"code":"var _jsxFileName = \"/home/gregory/projetos/sd-016-a-project-recipes-app/src/pages/exploreFoodsNat/ExploreFoodsNat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Footer from '../../components/footer/Footer';\nimport Header from '../../components/header/Header';\nimport fetchNationalitiesAPI from '../../services/fetchAPINationalities';\nimport fetchRecipesNationalitiesAPI from '../../services/fetchAPIByNationalities';\nimport fetchAPI from '../../services/fetchAPI';\nimport CardExplore from '../../components/cardExplore/CardExplore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExploreFoodsNat() {\n  _s();\n\n  const [filter, setFilter] = useState('All');\n  const [nationalitiesAPI, setNationalitiesAPI] = useState('');\n  const [recipes, setRecipes] = useState('');\n  const TWELVE = 12;\n\n  const mainScreenMeals = async () => {\n    const mainScreenRecipes = await fetchAPI('fetchMealByName', '');\n    setRecipes(mainScreenRecipes);\n  };\n\n  const filterByNationality = async NationalityValue => {\n    const responseAPI = await fetchRecipesNationalitiesAPI(NationalityValue);\n    setRecipes(responseAPI);\n  };\n\n  useEffect(() => {\n    if (filter === 'All') {\n      mainScreenMeals();\n    } else {\n      filterByNationality(filter);\n    }\n  }, [filter]); // dropdown\n\n  const handleValueFilter = _ref => {\n    let {\n      target: {\n        value\n      }\n    } = _ref;\n    setFilter(value);\n  };\n\n  useEffect(() => {\n    const getNationalities = async () => {\n      const result = await fetchNationalitiesAPI();\n      setNationalitiesAPI(result);\n    };\n\n    getNationalities();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      label: \"Explore Nationalities\",\n      testid: \"page-title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), nationalitiesAPI && /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"nationalities\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        \"data-testid\": \"explore-by-nationality-dropdown\",\n        name: \"nationalities\",\n        onChange: handleValueFilter,\n        value: filter,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"All\",\n          \"data-testid\": \"All-option\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), nationalitiesAPI.meals.map(value => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: value.strArea,\n          \"data-testid\": `${value.strArea}-option`,\n          children: value.strArea\n        }, value.strArea, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), recipes && recipes.meals.slice(0, TWELVE).map((value, i) => /*#__PURE__*/_jsxDEV(CardExplore, {\n      index: i,\n      name: value.strMeal,\n      id: value.idMeal,\n      img: value.strMealThumb\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExploreFoodsNat, \"fbl/d/iAW1RwPet3Q36ccfzZF0g=\");\n\n_c = ExploreFoodsNat;\nexport default ExploreFoodsNat;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExploreFoodsNat\");","map":{"version":3,"sources":["/home/gregory/projetos/sd-016-a-project-recipes-app/src/pages/exploreFoodsNat/ExploreFoodsNat.js"],"names":["React","useEffect","useState","Footer","Header","fetchNationalitiesAPI","fetchRecipesNationalitiesAPI","fetchAPI","CardExplore","ExploreFoodsNat","filter","setFilter","nationalitiesAPI","setNationalitiesAPI","recipes","setRecipes","TWELVE","mainScreenMeals","mainScreenRecipes","filterByNationality","NationalityValue","responseAPI","handleValueFilter","target","value","getNationalities","result","meals","map","strArea","slice","i","strMeal","idMeal","strMealThumb"],"mappings":"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","sourcesContent":["import React, { useEffect,\n  useState,\n} from 'react';\nimport Footer from '../../components/footer/Footer';\nimport Header from '../../components/header/Header';\nimport fetchNationalitiesAPI from '../../services/fetchAPINationalities';\nimport fetchRecipesNationalitiesAPI from '../../services/fetchAPIByNationalities';\nimport fetchAPI from '../../services/fetchAPI';\nimport CardExplore from '../../components/cardExplore/CardExplore';\n\nfunction ExploreFoodsNat() {\n  const [filter, setFilter] = useState('All');\n  const [nationalitiesAPI, setNationalitiesAPI] = useState('');\n  const [recipes, setRecipes] = useState('');\n  const TWELVE = 12;\n\n  const mainScreenMeals = async () => {\n    const mainScreenRecipes = await fetchAPI('fetchMealByName', '');\n    setRecipes(mainScreenRecipes);\n  };\n\n  const filterByNationality = async (NationalityValue) => {\n    const responseAPI = await fetchRecipesNationalitiesAPI(NationalityValue);\n    setRecipes(responseAPI);\n  };\n\n  useEffect(() => {\n    if (filter === 'All') {\n      mainScreenMeals();\n    } else {\n      filterByNationality(filter);\n    }\n  }, [filter]);\n\n  // dropdown\n  const handleValueFilter = ({ target: { value } }) => {\n    setFilter(value);\n  };\n\n  useEffect(() => {\n    const getNationalities = async () => {\n      const result = await fetchNationalitiesAPI();\n      setNationalitiesAPI(result);\n    };\n    getNationalities();\n  }, []);\n\n  return (\n    <div>\n      <Header\n        label=\"Explore Nationalities\"\n        testid=\"page-title\"\n      />\n      { nationalitiesAPI && (\n        <label htmlFor=\"nationalities\">\n          <select\n            data-testid=\"explore-by-nationality-dropdown\"\n            name=\"nationalities\"\n            onChange={ handleValueFilter }\n            value={ filter }\n          >\n            <option\n              value=\"All\"\n              data-testid=\"All-option\"\n            >\n              All\n            </option>\n            { nationalitiesAPI.meals.map((value) => (\n              <option\n                key={ value.strArea }\n                value={ value.strArea }\n                data-testid={ `${value.strArea}-option` }\n              >\n                { value.strArea }\n              </option>\n            )) }\n          </select>\n        </label>\n      ) }\n      { recipes && recipes.meals.slice(0, TWELVE).map((value, i) => (\n        <CardExplore\n          index={ i }\n          key={ i }\n          name={ value.strMeal }\n          id={ value.idMeal }\n          img={ value.strMealThumb }\n        />\n      )) }\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreFoodsNat;\n"]},"metadata":{},"sourceType":"module"}