{"ast":null,"code":"export const filterIngredientsFunc = returnAPIDrink => {\n  if (returnAPIDrink) {\n    const drinksIngredients = Object.entries(returnAPIDrink.drinks[0]).filter(key => key[0].includes('strIngredient') && key[1]).map(e => e[1]);\n    return drinksIngredients;\n  }\n};\nexport const filterMeasuresFunc = returnAPIDrink => {\n  if (returnAPIDrink) {\n    const drinksMeasures = Object.entries(returnAPIDrink.drinks[0]).filter(key => key[0].includes('strMeasure') && key[1]).map(e => e[1]);\n    return drinksMeasures;\n  }\n};\nexport const youtubeLinkConverter = returnAPIDrink => {\n  if (returnAPIDrink) {\n    const youtubeAPI = returnAPIDrink.drinks[0].strVideo;\n\n    if (youtubeAPI) {\n      const youtubeAPISlipted = youtubeAPI.split('https://www.youtube.com/watch?v=')[1];\n      return `https://www.youtube.com/embed/${youtubeAPISlipted}`;\n    }\n\n    return null;\n  }\n};\nexport const favoriteDrink = returnAPIDrink => {\n  const arrayRecipe = localStorage.getItem('favoriteRecipes');\n  const {\n    idDrink,\n    strCategory,\n    strDrink,\n    strDrinkThumb,\n    strAlcoholic\n  } = returnAPIDrink.drinks[0];\n  const newRecipe = {\n    id: idDrink,\n    type: 'drink',\n    nationality: '',\n    category: strCategory,\n    alcoholicOrNot: strAlcoholic,\n    name: strDrink,\n    image: strDrinkThumb\n  };\n  const favoriteRecipes = arrayRecipe ? [...JSON.parse(arrayRecipe), newRecipe] : [newRecipe];\n  localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteRecipes));\n};\nexport const removeFavoriteDrink = id => {\n  const arrayRecipe = localStorage.getItem('favoriteRecipes');\n  const newArray = JSON.parse(arrayRecipe).filter(filtered => filtered.id !== id);\n  localStorage.setItem('favoriteRecipes', JSON.stringify(newArray));\n};","map":{"version":3,"sources":["/home/gregory/projetos/sd-016-a-project-recipes-app/src/pages/detailDrinks/FuncDetailDrinks.js"],"names":["filterIngredientsFunc","returnAPIDrink","drinksIngredients","Object","entries","drinks","filter","key","includes","map","e","filterMeasuresFunc","drinksMeasures","youtubeLinkConverter","youtubeAPI","strVideo","youtubeAPISlipted","split","favoriteDrink","arrayRecipe","localStorage","getItem","idDrink","strCategory","strDrink","strDrinkThumb","strAlcoholic","newRecipe","id","type","nationality","category","alcoholicOrNot","name","image","favoriteRecipes","JSON","parse","setItem","stringify","removeFavoriteDrink","newArray","filtered"],"mappings":"AAAA,OAAO,MAAMA,qBAAqB,GAAIC,cAAD,IAAoB;AACvD,MAAIA,cAAJ,EAAoB;AAClB,UAAMC,iBAAiB,GAAGC,MAAM,CAACC,OAAP,CAAeH,cAAc,CAACI,MAAf,CAAsB,CAAtB,CAAf,EACvBC,MADuB,CACfC,GAAD,IAASA,GAAG,CAAC,CAAD,CAAH,CAAOC,QAAP,CAAgB,eAAhB,KAAoCD,GAAG,CAAC,CAAD,CADhC,EAEvBE,GAFuB,CAElBC,CAAD,IAAOA,CAAC,CAAC,CAAD,CAFW,CAA1B;AAGA,WAAOR,iBAAP;AACD;AACF,CAPM;AASP,OAAO,MAAMS,kBAAkB,GAAIV,cAAD,IAAoB;AACpD,MAAIA,cAAJ,EAAoB;AAClB,UAAMW,cAAc,GAAGT,MAAM,CAACC,OAAP,CAAeH,cAAc,CAACI,MAAf,CAAsB,CAAtB,CAAf,EACpBC,MADoB,CACZC,GAAD,IAASA,GAAG,CAAC,CAAD,CAAH,CAAOC,QAAP,CAAgB,YAAhB,KAAiCD,GAAG,CAAC,CAAD,CADhC,EAEpBE,GAFoB,CAEfC,CAAD,IAAOA,CAAC,CAAC,CAAD,CAFQ,CAAvB;AAGA,WAAOE,cAAP;AACD;AACF,CAPM;AASP,OAAO,MAAMC,oBAAoB,GAAIZ,cAAD,IAAoB;AACtD,MAAIA,cAAJ,EAAoB;AAClB,UAAMa,UAAU,GAAGb,cAAc,CAACI,MAAf,CAAsB,CAAtB,EAAyBU,QAA5C;;AACA,QAAID,UAAJ,EAAgB;AACd,YAAME,iBAAiB,GAAGF,UAAU,CAACG,KAAX,CAAiB,kCAAjB,EAAqD,CAArD,CAA1B;AACA,aAAQ,iCAAgCD,iBAAkB,EAA1D;AACD;;AAAC,WAAO,IAAP;AACH;AACF,CARM;AAUP,OAAO,MAAME,aAAa,GAAIjB,cAAD,IAAoB;AAC/C,QAAMkB,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAApB;AACA,QAAM;AACJC,IAAAA,OADI;AAEJC,IAAAA,WAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,aAJI;AAKJC,IAAAA;AALI,MAMFzB,cAAc,CAACI,MAAf,CAAsB,CAAtB,CANJ;AAOA,QAAMsB,SAAS,GAAG;AAChBC,IAAAA,EAAE,EAAEN,OADY;AAEhBO,IAAAA,IAAI,EAAE,OAFU;AAGhBC,IAAAA,WAAW,EAAE,EAHG;AAIhBC,IAAAA,QAAQ,EAAER,WAJM;AAKhBS,IAAAA,cAAc,EAAEN,YALA;AAMhBO,IAAAA,IAAI,EAAET,QANU;AAOhBU,IAAAA,KAAK,EAAET;AAPS,GAAlB;AASA,QAAMU,eAAe,GAAGhB,WAAW,GAC/B,CAAC,GAAGiB,IAAI,CAACC,KAAL,CAAWlB,WAAX,CAAJ,EAA6BQ,SAA7B,CAD+B,GACW,CAACA,SAAD,CAD9C;AAEAP,EAAAA,YAAY,CAACkB,OAAb,CAAqB,iBAArB,EAAwCF,IAAI,CAACG,SAAL,CAAeJ,eAAf,CAAxC;AACD,CArBM;AAuBP,OAAO,MAAMK,mBAAmB,GAAIZ,EAAD,IAAQ;AACzC,QAAMT,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAApB;AACA,QAAMoB,QAAQ,GAAGL,IAAI,CAACC,KAAL,CAAWlB,WAAX,EAAwBb,MAAxB,CAAgCoC,QAAD,IAAcA,QAAQ,CAACd,EAAT,KAAgBA,EAA7D,CAAjB;AACAR,EAAAA,YAAY,CAACkB,OAAb,CAAqB,iBAArB,EAAwCF,IAAI,CAACG,SAAL,CAAeE,QAAf,CAAxC;AACD,CAJM","sourcesContent":["export const filterIngredientsFunc = (returnAPIDrink) => {\n  if (returnAPIDrink) {\n    const drinksIngredients = Object.entries(returnAPIDrink.drinks[0])\n      .filter((key) => key[0].includes('strIngredient') && key[1])\n      .map((e) => e[1]);\n    return drinksIngredients;\n  }\n};\n\nexport const filterMeasuresFunc = (returnAPIDrink) => {\n  if (returnAPIDrink) {\n    const drinksMeasures = Object.entries(returnAPIDrink.drinks[0])\n      .filter((key) => key[0].includes('strMeasure') && key[1])\n      .map((e) => e[1]);\n    return drinksMeasures;\n  }\n};\n\nexport const youtubeLinkConverter = (returnAPIDrink) => {\n  if (returnAPIDrink) {\n    const youtubeAPI = returnAPIDrink.drinks[0].strVideo;\n    if (youtubeAPI) {\n      const youtubeAPISlipted = youtubeAPI.split('https://www.youtube.com/watch?v=')[1];\n      return `https://www.youtube.com/embed/${youtubeAPISlipted}`;\n    } return null;\n  }\n};\n\nexport const favoriteDrink = (returnAPIDrink) => {\n  const arrayRecipe = localStorage.getItem('favoriteRecipes');\n  const {\n    idDrink,\n    strCategory,\n    strDrink,\n    strDrinkThumb,\n    strAlcoholic,\n  } = returnAPIDrink.drinks[0];\n  const newRecipe = {\n    id: idDrink,\n    type: 'drink',\n    nationality: '',\n    category: strCategory,\n    alcoholicOrNot: strAlcoholic,\n    name: strDrink,\n    image: strDrinkThumb,\n  };\n  const favoriteRecipes = arrayRecipe\n    ? [...JSON.parse(arrayRecipe), newRecipe] : [newRecipe];\n  localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteRecipes));\n};\n\nexport const removeFavoriteDrink = (id) => {\n  const arrayRecipe = localStorage.getItem('favoriteRecipes');\n  const newArray = JSON.parse(arrayRecipe).filter((filtered) => filtered.id !== id);\n  localStorage.setItem('favoriteRecipes', JSON.stringify(newArray));\n};\n"]},"metadata":{},"sourceType":"module"}