{"ast":null,"code":"import fetchAPI from '../../services/fetchAPI';\nexport const redirectFinishFunc = returnAPIDrink => {\n  const arrayRecipeDone = localStorage.getItem('doneRecipes');\n  const now = new Date();\n  const dataDoneRecipe = `${now.getDate()}/${now.getMonth()}/${now.getFullYear()}`;\n  const {\n    idDrink,\n    strCategory,\n    strAlcoholic,\n    strDrink,\n    strDrinkThumb\n  } = returnAPIDrink.drinks[0];\n  console.log(returnAPIDrink.drinks[0]); // const tagsArray = strTags.split(',');\n\n  const doneRecipes = {\n    id: idDrink,\n    type: 'drink',\n    category: strCategory,\n    alcoholicOrNot: strAlcoholic,\n    name: strDrink,\n    image: strDrinkThumb,\n    doneDate: dataDoneRecipe,\n    tags: [],\n    nationality: ''\n  };\n  const doneRecipesLocalstorage = arrayRecipeDone ? [...JSON.parse(arrayRecipeDone), doneRecipes] : [doneRecipes];\n  localStorage.setItem('doneRecipes', JSON.stringify(doneRecipesLocalstorage));\n};\nexport const verifyIdLocalstorageDrink = async id => {\n  const returnAPIDrink = await fetchAPI('fetchCocktailById', id);\n  const getRecipeLocalstorage = localStorage.getItem('favoriteRecipes');\n  const recipeIdLocalstorage = JSON.parse(getRecipeLocalstorage);\n\n  if (returnAPIDrink && recipeIdLocalstorage) {\n    recipeIdLocalstorage.map(value => returnAPIDrink.drinks[0].idDrink === value.id);\n    return true;\n  }\n\n  return false;\n};","map":{"version":3,"sources":["/home/gregory/projetos/sd-016-a-project-recipes-app/src/pages/progressDrinks/ProgressDrinksFunc.js"],"names":["fetchAPI","redirectFinishFunc","returnAPIDrink","arrayRecipeDone","localStorage","getItem","now","Date","dataDoneRecipe","getDate","getMonth","getFullYear","idDrink","strCategory","strAlcoholic","strDrink","strDrinkThumb","drinks","console","log","doneRecipes","id","type","category","alcoholicOrNot","name","image","doneDate","tags","nationality","doneRecipesLocalstorage","JSON","parse","setItem","stringify","verifyIdLocalstorageDrink","getRecipeLocalstorage","recipeIdLocalstorage","map","value"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,yBAArB;AAEA,OAAO,MAAMC,kBAAkB,GAAIC,cAAD,IAAoB;AACpD,QAAMC,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAxB;AACA,QAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AACA,QAAMC,cAAc,GAAI,GAAEF,GAAG,CAACG,OAAJ,EAAc,IAAGH,GAAG,CAACI,QAAJ,EAAe,IAAGJ,GAAG,CAACK,WAAJ,EAAkB,EAA/E;AACA,QAAM;AACJC,IAAAA,OADI;AACKC,IAAAA,WADL;AACkBC,IAAAA,YADlB;AACgCC,IAAAA,QADhC;AAC0CC,IAAAA;AAD1C,MAEFd,cAAc,CAACe,MAAf,CAAsB,CAAtB,CAFJ;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYjB,cAAc,CAACe,MAAf,CAAsB,CAAtB,CAAZ,EAPoD,CAQpD;;AACA,QAAMG,WAAW,GAAG;AAClBC,IAAAA,EAAE,EAAET,OADc;AAElBU,IAAAA,IAAI,EAAE,OAFY;AAGlBC,IAAAA,QAAQ,EAAEV,WAHQ;AAIlBW,IAAAA,cAAc,EAAEV,YAJE;AAKlBW,IAAAA,IAAI,EAAEV,QALY;AAMlBW,IAAAA,KAAK,EAAEV,aANW;AAOlBW,IAAAA,QAAQ,EAAEnB,cAPQ;AAQlBoB,IAAAA,IAAI,EAAE,EARY;AASlBC,IAAAA,WAAW,EAAE;AATK,GAApB;AAYA,QAAMC,uBAAuB,GAAG3B,eAAe,GAC3C,CAAC,GAAG4B,IAAI,CAACC,KAAL,CAAW7B,eAAX,CAAJ,EAAiCiB,WAAjC,CAD2C,GACK,CAACA,WAAD,CADpD;AAEAhB,EAAAA,YAAY,CAAC6B,OAAb,CAAqB,aAArB,EACEF,IAAI,CAACG,SAAL,CAAeJ,uBAAf,CADF;AAED,CAzBM;AA2BP,OAAO,MAAMK,yBAAyB,GAAG,MAAOd,EAAP,IAAc;AACrD,QAAMnB,cAAc,GAAG,MAAMF,QAAQ,CAAC,mBAAD,EAAsBqB,EAAtB,CAArC;AACA,QAAMe,qBAAqB,GAAGhC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAA9B;AACA,QAAMgC,oBAAoB,GAAGN,IAAI,CAACC,KAAL,CAAWI,qBAAX,CAA7B;;AACA,MAAIlC,cAAc,IAAImC,oBAAtB,EAA4C;AAC1CA,IAAAA,oBAAoB,CAACC,GAArB,CAA0BC,KAAD,IAAWrC,cAAc,CAACe,MAAf,CAAsB,CAAtB,EAAyBL,OAAzB,KAAqC2B,KAAK,CAAClB,EAA/E;AACA,WAAO,IAAP;AACD;;AAAC,SAAO,KAAP;AACH,CARM","sourcesContent":["import fetchAPI from '../../services/fetchAPI';\n\nexport const redirectFinishFunc = (returnAPIDrink) => {\n  const arrayRecipeDone = localStorage.getItem('doneRecipes');\n  const now = new Date();\n  const dataDoneRecipe = `${now.getDate()}/${now.getMonth()}/${now.getFullYear()}`;\n  const {\n    idDrink, strCategory, strAlcoholic, strDrink, strDrinkThumb,\n  } = returnAPIDrink.drinks[0];\n  console.log(returnAPIDrink.drinks[0]);\n  // const tagsArray = strTags.split(',');\n  const doneRecipes = {\n    id: idDrink,\n    type: 'drink',\n    category: strCategory,\n    alcoholicOrNot: strAlcoholic,\n    name: strDrink,\n    image: strDrinkThumb,\n    doneDate: dataDoneRecipe,\n    tags: [],\n    nationality: '',\n  };\n\n  const doneRecipesLocalstorage = arrayRecipeDone\n    ? [...JSON.parse(arrayRecipeDone), doneRecipes] : [doneRecipes];\n  localStorage.setItem('doneRecipes',\n    JSON.stringify(doneRecipesLocalstorage));\n};\n\nexport const verifyIdLocalstorageDrink = async (id) => {\n  const returnAPIDrink = await fetchAPI('fetchCocktailById', id);\n  const getRecipeLocalstorage = localStorage.getItem('favoriteRecipes');\n  const recipeIdLocalstorage = JSON.parse(getRecipeLocalstorage);\n  if (returnAPIDrink && recipeIdLocalstorage) {\n    recipeIdLocalstorage.map((value) => returnAPIDrink.drinks[0].idDrink === value.id);\n    return true;\n  } return false;\n};\n"]},"metadata":{},"sourceType":"module"}