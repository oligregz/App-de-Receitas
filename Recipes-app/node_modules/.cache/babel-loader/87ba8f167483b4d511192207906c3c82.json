{"ast":null,"code":"var _jsxFileName = \"/home/gregory/projetos/sd-016-a-project-recipes-app/src/pages/progressFoods/ProgressFoods.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport fetchAPI from '../../services/fetchAPI';\nimport IngredientsCheck from '../../components/IngredientsCheck/IngredientsCheck';\nimport GlobalContext from '../../context/GlobalContext';\nimport shareImg from '../../images/shareIcon.svg';\nimport whiteHeartIcon from '../../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\nimport { filterIngredientsFunc, filterMeasuresFunc, favoriteFood, removeFavoriteFood } from '../detailFoods/FuncDetailFoods';\nimport { redirectFinishFunc, verifyIdLocalstorage } from './ProgressFoodsFunc';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProgressFoods(_ref) {\n  _s();\n\n  let {\n    match\n  } = _ref;\n  const [returnAPI, setReturnAPI] = useState('');\n  const [checkboxList, setCheckboxList] = useState({});\n  const {\n    handleRecipeStarted,\n    linkC,\n    linkCopy\n  } = useContext(GlobalContext);\n  const {\n    params: {\n      id\n    }\n  } = match;\n  useEffect(() => {\n    const returnFetchApi = async () => {\n      const result = await fetchAPI('fetchMealById', id);\n      setReturnAPI(result);\n    };\n\n    const ingredientListCreator = async () => {\n      const result = await fetchAPI('fetchMealById', id);\n      const getRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n      const ingredientList = filterIngredientsFunc(result);\n\n      if (!getRecipes || Object.keys(getRecipes.meals[id]).length === 0) {\n        const state = ingredientList.reduce((obj, ingredient) => ({ ...obj,\n          [ingredient]: false\n        }), {});\n        setCheckboxList(state);\n        handleRecipeStarted(result.meals[0], state);\n      } else {\n        setCheckboxList(getRecipes.meals[id]);\n      }\n    };\n\n    returnFetchApi();\n    ingredientListCreator();\n  }, []);\n  const history = useHistory();\n\n  function redirectFinish() {\n    history.push('/done-recipes');\n    redirectFinishFunc(returnAPI);\n  }\n\n  const handleChangeCheckBox = _ref2 => {\n    let {\n      target\n    } = _ref2;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const getRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const ingredientList = getRecipes.meals[id];\n    const obj = { ...ingredientList,\n      [target.name]: value\n    };\n    setCheckboxList(obj);\n    handleRecipeStarted(returnAPI.meals[0], obj);\n  };\n\n  const finishRecipeIsDisabled = () => Object.values(checkboxList).every(ingredient => ingredient);\n\n  const [favoriteButt, setFavoriteButt] = useState(false);\n  useEffect(() => {\n    const verifyIdLocalstorageValue = async () => {\n      const response = await verifyIdLocalstorage(id);\n\n      if (response) {\n        setFavoriteButt(true);\n      }\n    };\n\n    verifyIdLocalstorageValue();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: returnAPI && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Foods in Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        \"data-testid\": \"recipe-photo\",\n        alt: \"Img\",\n        src: returnAPI.meals[0].strMealThumb,\n        width: \"200px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        \"data-testid\": \"recipe-title\",\n        children: returnAPI.meals[0].strMeal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        \"data-testid\": \"recipe-category\",\n        children: returnAPI.meals[0].strCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": \"share-btn\",\n        type: \"button\",\n        onClick: linkC,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: shareImg,\n          alt: \"share icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this), linkCopy ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Link copied!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 26\n      }, this) : null, !favoriteButt ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          favoriteFood(returnAPI);\n          setFavoriteButt(true);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          \"data-testid\": \"favorite-btn\",\n          src: whiteHeartIcon,\n          alt: \"whiteHeartIcon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          removeFavoriteFood(id);\n          setFavoriteButt(false);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          \"data-testid\": \"favorite-btn\",\n          src: blackHeartIcon,\n          alt: \"blackHeartIcon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"instructions\",\n        children: returnAPI.meals[0].strInstructions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }, this), Object.values(checkboxList).length > 0 && /*#__PURE__*/_jsxDEV(IngredientsCheck, {\n        ingredients: filterIngredientsFunc(returnAPI),\n        measures: filterMeasuresFunc(returnAPI),\n        handleChange: handleChangeCheckBox,\n        checkboxList: checkboxList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"data-testid\": \"finish-recipe-btn\",\n        className: \"finish-food-btn\",\n        onClick: () => redirectFinish(),\n        disabled: !finishRecipeIsDisabled(),\n        children: \"Finish Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProgressFoods, \"dgtpp9OEk/7ZSQZVMtoYlZJhSpg=\", false, function () {\n  return [useHistory];\n});\n\n_c = ProgressFoods;\nProgressFoods.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    })\n  })\n};\nProgressFoods.defaultProps = {\n  match: {}\n};\nexport default ProgressFoods;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProgressFoods\");","map":{"version":3,"sources":["/home/gregory/projetos/sd-016-a-project-recipes-app/src/pages/progressFoods/ProgressFoods.js"],"names":["React","useState","useEffect","useContext","PropTypes","useHistory","fetchAPI","IngredientsCheck","GlobalContext","shareImg","whiteHeartIcon","blackHeartIcon","filterIngredientsFunc","filterMeasuresFunc","favoriteFood","removeFavoriteFood","redirectFinishFunc","verifyIdLocalstorage","ProgressFoods","match","returnAPI","setReturnAPI","checkboxList","setCheckboxList","handleRecipeStarted","linkC","linkCopy","params","id","returnFetchApi","result","ingredientListCreator","getRecipes","JSON","parse","localStorage","getItem","ingredientList","Object","keys","meals","length","state","reduce","obj","ingredient","history","redirectFinish","push","handleChangeCheckBox","target","value","type","checked","name","finishRecipeIsDisabled","values","every","favoriteButt","setFavoriteButt","verifyIdLocalstorageValue","response","strMealThumb","strMeal","strCategory","strInstructions","propTypes","shape","string","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport fetchAPI from '../../services/fetchAPI';\nimport IngredientsCheck from '../../components/IngredientsCheck/IngredientsCheck';\nimport GlobalContext from '../../context/GlobalContext';\nimport shareImg from '../../images/shareIcon.svg';\nimport whiteHeartIcon from '../../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\n\nimport {\n  filterIngredientsFunc,\n  filterMeasuresFunc,\n  favoriteFood,\n  removeFavoriteFood,\n} from '../detailFoods/FuncDetailFoods';\n\nimport {\n  redirectFinishFunc,\n  verifyIdLocalstorage,\n} from './ProgressFoodsFunc';\n\nfunction ProgressFoods({ match }) {\n  const [returnAPI, setReturnAPI] = useState('');\n  const [checkboxList, setCheckboxList] = useState({});\n  const {\n    handleRecipeStarted,\n    linkC,\n    linkCopy,\n  } = useContext(GlobalContext);\n\n  const { params: { id } } = match;\n\n  useEffect(() => {\n    const returnFetchApi = async () => {\n      const result = await fetchAPI('fetchMealById', id);\n      setReturnAPI(result);\n    };\n    const ingredientListCreator = async () => {\n      const result = await fetchAPI('fetchMealById', id);\n      const getRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n      const ingredientList = filterIngredientsFunc(result);\n      if (!getRecipes || Object.keys(getRecipes.meals[id]).length === 0) {\n        const state = ingredientList.reduce((obj, ingredient) => ({\n          ...obj,\n          [ingredient]: false,\n        }), {});\n        setCheckboxList(state);\n        handleRecipeStarted(result.meals[0], state);\n      } else {\n        setCheckboxList(getRecipes.meals[id]);\n      }\n    };\n    returnFetchApi();\n    ingredientListCreator();\n  }, []);\n\n  const history = useHistory();\n\n  function redirectFinish() {\n    history.push('/done-recipes');\n    redirectFinishFunc(returnAPI);\n  }\n\n  const handleChangeCheckBox = ({ target }) => {\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const getRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const ingredientList = getRecipes.meals[id];\n    const obj = {\n      ...ingredientList,\n      [target.name]: value,\n    };\n    setCheckboxList(obj);\n    handleRecipeStarted(returnAPI.meals[0], obj);\n  };\n\n  const finishRecipeIsDisabled = () => Object.values(checkboxList)\n    .every((ingredient) => ingredient);\n\n  const [favoriteButt, setFavoriteButt] = useState(false);\n\n  useEffect(() => {\n    const verifyIdLocalstorageValue = async () => {\n      const response = await verifyIdLocalstorage(id);\n      if (response) {\n        setFavoriteButt(true);\n      }\n    };\n    verifyIdLocalstorageValue();\n  }, []);\n\n  return (\n    <div>\n      {\n        returnAPI\n        && (\n          <div>\n            <h2>Foods in Progress</h2>\n            <img\n              data-testid=\"recipe-photo\"\n              alt=\"Img\"\n              src={ returnAPI.meals[0].strMealThumb }\n              width=\"200px\"\n            />\n            <h2 data-testid=\"recipe-title\">{returnAPI.meals[0].strMeal}</h2>\n\n            <h4 data-testid=\"recipe-category\">{returnAPI.meals[0].strCategory}</h4>\n\n            <button\n              data-testid=\"share-btn\"\n              type=\"button\"\n              onClick={ linkC }\n            >\n              <img src={ shareImg } alt=\"share icon\" />\n            </button>\n            { linkCopy ? <p>Link copied!</p> : null }\n\n            { !favoriteButt\n              ? (\n                <button\n                  type=\"button\"\n                  onClick={ () => {\n                    favoriteFood(returnAPI);\n                    setFavoriteButt(true);\n                  } }\n                >\n                  <img\n                    data-testid=\"favorite-btn\"\n                    src={ whiteHeartIcon }\n                    alt=\"whiteHeartIcon\"\n                  />\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  onClick={ () => {\n                    removeFavoriteFood(id);\n                    setFavoriteButt(false);\n                  } }\n                >\n                  <img\n                    data-testid=\"favorite-btn\"\n                    src={ blackHeartIcon }\n                    alt=\"blackHeartIcon\"\n                  />\n                </button>\n              ) }\n\n            <p data-testid=\"instructions\">{returnAPI.meals[0].strInstructions}</p>\n\n            {Object.values(checkboxList).length > 0 && (\n              <IngredientsCheck\n                ingredients={ filterIngredientsFunc(returnAPI) }\n                measures={ filterMeasuresFunc(returnAPI) }\n                handleChange={ handleChangeCheckBox }\n                checkboxList={ checkboxList }\n              />\n            )}\n\n            <button\n              type=\"button\"\n              data-testid=\"finish-recipe-btn\"\n              className=\"finish-food-btn\"\n              onClick={ () => redirectFinish() }\n              disabled={ !finishRecipeIsDisabled() }\n            >\n              Finish Recipe\n            </button>\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nProgressFoods.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }),\n};\n\nProgressFoods.defaultProps = {\n  match: {},\n};\n\nexport default ProgressFoods;\n"]},"metadata":{},"sourceType":"module"}