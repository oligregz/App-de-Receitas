{"ast":null,"code":"var _jsxFileName = \"/home/gregory/projetos/sd-016-a-project-recipes-app/src/pages/detailDrinks/DetailDrinks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport shareImg from '../../images/shareIcon.svg';\nimport whiteHeartIcon from '../../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\nimport Button from '../../components/button/Button';\nimport IngredientsList from '../../components/ingredientList/IngredientList';\nimport fetchAPI from '../../services/fetchAPI';\nimport './DetailDrinks.css';\nimport { filterIngredientsFunc, filterMeasuresFunc, youtubeLinkConverter } from './FuncDetailDrinks';\nimport RecomendationCard from '../../components/recomendationCard/RecomendationCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CUT = '/drinks/';\n\nfunction DetailDrink() {\n  _s();\n\n  const [returnAPIDrink, setReturnAPIDrink] = useState('');\n  const location = useLocation();\n  const sliceLocationId = location.pathname.split(CUT)[1];\n  useEffect(() => {\n    const returnFetchApi = async () => {\n      const result = await fetchAPI('fetchCocktailById', sliceLocationId);\n      setReturnAPIDrink(result);\n    };\n\n    returnFetchApi();\n  }, [sliceLocationId]);\n  console.log(returnAPIDrink);\n  const [linkCopy, setLinkCopy] = useState(false);\n\n  const linkC = () => {\n    copy(window.location.href);\n    setLinkCopy(true);\n  };\n\n  const history = useHistory();\n  const [favoriteButt, setFavoriteButt] = useState(false);\n\n  const favoriteDrink = () => {\n    const arrayRecipe = localStorage.getItem('favoriteRecipes');\n    console.log(arrayRecipe);\n    const {\n      idDrink,\n      strCategory,\n      strDrink,\n      strDrinkThumb,\n      strAlcoholic\n    } = returnAPIDrink.drinks[0];\n    const newRecipe = {\n      id: idDrink,\n      type: 'drink',\n      nationality: '',\n      category: strCategory,\n      alcoholicOrNot: strAlcoholic,\n      name: strDrink,\n      image: strDrinkThumb\n    };\n    const favoriteRecipes = arrayRecipe ? [...JSON.parse(arrayRecipe), newRecipe] : [newRecipe];\n    console.log(newRecipe);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteRecipes));\n  };\n\n  const removeFavoriteDrink = () => {\n    const newRecipe = '';\n    localStorage.setItem('favoriteRecipes', JSON.stringify(...newRecipe, newRecipe));\n  };\n\n  useEffect(() => {\n    const verifyIdLocalstorage = () => {\n      const getRecipeLocalstorage = localStorage.getItem('favoriteRecipes'); //  console.log(getRecipeLocalstorage);\n\n      const recipeIdLocalstorage = JSON.parse(getRecipeLocalstorage);\n      console.log(recipeIdLocalstorage);\n\n      if (returnAPIDrink && recipeIdLocalstorage) {\n        recipeIdLocalstorage.map(value => returnAPIDrink.drinks[0].idDrink === value.id && setFavoriteButt(true));\n      }\n    };\n\n    verifyIdLocalstorage();\n  }, [returnAPIDrink]); // isFavorite\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: returnAPIDrink && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        \"data-testid\": \"recipe-photo\",\n        src: returnAPIDrink.drinks[0].strDrinkThumb,\n        alt: \"img\",\n        width: \"200px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"title\", {\n        \"data-testid\": \"recipe-title\",\n        children: returnAPIDrink.drinks[0].strDrink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": \"share-btn\",\n        type: \"button\",\n        onClick: linkC,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: shareImg,\n          alt: \"share icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), linkCopy ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Link copied!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 26\n      }, this) : null, !favoriteButt ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          favoriteDrink();\n          setFavoriteButt(true);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          \"data-testid\": \"favorite-btn\",\n          src: whiteHeartIcon,\n          alt: \"whiteHeartIcon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          removeFavoriteDrink();\n          setFavoriteButt(false);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          \"data-testid\": \"favorite-btn\",\n          src: blackHeartIcon,\n          alt: \"blackHeartIcon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"recipe-category\",\n        children: returnAPIDrink.drinks[0].strAlcoholic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(IngredientsList, {\n        ingredients: filterIngredientsFunc(returnAPIDrink),\n        measures: filterMeasuresFunc(returnAPIDrink)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-testid\": \"instructions\",\n        children: returnAPIDrink.drinks[0].strInstructions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this), youtubeLinkConverter && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          \"data-testid\": \"video\",\n          width: \"450\",\n          height: \"280\",\n          src: youtubeLinkConverter(returnAPIDrink),\n          frameBorder: \"0\",\n          allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n          allowFullScreen: true,\n          title: \"Embedded youtube\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        testid: \"start-recipe-btn\",\n        label: \"Start Recipe\",\n        type: \"button\",\n        className: \"buttonstart\",\n        onClick: () => history.push(`/drinks/${sliceLocationId}/in-progress`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RecomendationCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DetailDrink, \"kHYf4HmyI+hspIeYGVPHel+iKrg=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = DetailDrink;\nexport default DetailDrink;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailDrink\");","map":{"version":3,"sources":["/home/gregory/projetos/sd-016-a-project-recipes-app/src/pages/detailDrinks/DetailDrinks.js"],"names":["React","useState","useEffect","useLocation","useHistory","copy","shareImg","whiteHeartIcon","blackHeartIcon","Button","IngredientsList","fetchAPI","filterIngredientsFunc","filterMeasuresFunc","youtubeLinkConverter","RecomendationCard","CUT","DetailDrink","returnAPIDrink","setReturnAPIDrink","location","sliceLocationId","pathname","split","returnFetchApi","result","console","log","linkCopy","setLinkCopy","linkC","window","href","history","favoriteButt","setFavoriteButt","favoriteDrink","arrayRecipe","localStorage","getItem","idDrink","strCategory","strDrink","strDrinkThumb","strAlcoholic","drinks","newRecipe","id","type","nationality","category","alcoholicOrNot","name","image","favoriteRecipes","JSON","parse","setItem","stringify","removeFavoriteDrink","verifyIdLocalstorage","getRecipeLocalstorage","recipeIdLocalstorage","map","value","strInstructions","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport shareImg from '../../images/shareIcon.svg';\nimport whiteHeartIcon from '../../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\nimport Button from '../../components/button/Button';\nimport IngredientsList from '../../components/ingredientList/IngredientList';\nimport fetchAPI from '../../services/fetchAPI';\nimport './DetailDrinks.css';\nimport {\n  filterIngredientsFunc,\n  filterMeasuresFunc,\n  youtubeLinkConverter,\n} from './FuncDetailDrinks';\nimport RecomendationCard from '../../components/recomendationCard/RecomendationCard';\n\nconst CUT = '/drinks/';\nfunction DetailDrink() {\n  const [returnAPIDrink, setReturnAPIDrink] = useState('');\n  const location = useLocation();\n  const sliceLocationId = location.pathname.split(CUT)[1];\n\n  useEffect(() => {\n    const returnFetchApi = async () => {\n      const result = await fetchAPI('fetchCocktailById', sliceLocationId);\n      setReturnAPIDrink(result);\n    };\n    returnFetchApi();\n  }, [sliceLocationId]);\n  console.log(returnAPIDrink);\n\n  const [linkCopy, setLinkCopy] = useState(false);\n  const linkC = () => {\n    copy(window.location.href);\n    setLinkCopy(true);\n  };\n  const history = useHistory();\n  const [favoriteButt, setFavoriteButt] = useState(false);\n\n  const favoriteDrink = () => {\n    const arrayRecipe = localStorage.getItem('favoriteRecipes');\n    console.log(arrayRecipe);\n    const {\n      idDrink,\n      strCategory,\n      strDrink,\n      strDrinkThumb,\n      strAlcoholic,\n    } = returnAPIDrink.drinks[0];\n    const newRecipe = {\n      id: idDrink,\n      type: 'drink',\n      nationality: '',\n      category: strCategory,\n      alcoholicOrNot: strAlcoholic,\n      name: strDrink,\n      image: strDrinkThumb,\n    };\n    const favoriteRecipes = arrayRecipe\n      ? [...JSON.parse(arrayRecipe), newRecipe] : [newRecipe];\n    console.log(newRecipe);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteRecipes));\n  };\n\n  const removeFavoriteDrink = () => {\n    const newRecipe = '';\n    localStorage.setItem('favoriteRecipes', JSON.stringify(...newRecipe, newRecipe));\n  };\n\n  useEffect(() => {\n    const verifyIdLocalstorage = () => {\n      const getRecipeLocalstorage = localStorage.getItem('favoriteRecipes');\n      //  console.log(getRecipeLocalstorage);\n      const recipeIdLocalstorage = JSON.parse(getRecipeLocalstorage);\n      console.log(recipeIdLocalstorage);\n      if (returnAPIDrink && recipeIdLocalstorage) {\n        recipeIdLocalstorage.map((value) => returnAPIDrink.drinks[0].idDrink === value.id\n          && setFavoriteButt(true));\n      }\n    };\n    verifyIdLocalstorage();\n  }, [returnAPIDrink]); // isFavorite\n  return (\n    <div>\n      {\n        returnAPIDrink\n        && (\n          <div>\n            <img\n              data-testid=\"recipe-photo\"\n              src={ returnAPIDrink.drinks[0].strDrinkThumb }\n              alt=\"img\"\n              width=\"200px\"\n            />\n            <title\n              data-testid=\"recipe-title\"\n            >\n              { returnAPIDrink.drinks[0].strDrink }\n            </title>\n            <button\n              data-testid=\"share-btn\"\n              type=\"button\"\n              onClick={ linkC }\n            >\n              <img src={ shareImg } alt=\"share icon\" />\n            </button>\n            { linkCopy ? <p>Link copied!</p> : null }\n            { !favoriteButt\n              ? (\n                <button\n                  type=\"button\"\n                  onClick={ () => {\n                    favoriteDrink();\n                    setFavoriteButt(true);\n                  } }\n                >\n                  <img\n                    data-testid=\"favorite-btn\"\n                    src={ whiteHeartIcon }\n                    alt=\"whiteHeartIcon\"\n                  />\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  onClick={ () => {\n                    removeFavoriteDrink();\n                    setFavoriteButt(false);\n                  } }\n                >\n                  <img\n                    data-testid=\"favorite-btn\"\n                    src={ blackHeartIcon }\n                    alt=\"blackHeartIcon\"\n                  />\n                </button>\n              ) }\n            <p data-testid=\"recipe-category\">{ returnAPIDrink.drinks[0].strAlcoholic }</p>\n            <IngredientsList\n              ingredients={ filterIngredientsFunc(returnAPIDrink) }\n              measures={ filterMeasuresFunc(returnAPIDrink) }\n            />\n            <div data-testid=\"instructions\">\n              { returnAPIDrink.drinks[0].strInstructions }\n            </div>\n            { youtubeLinkConverter && (\n              <div>\n                <iframe\n                  data-testid=\"video\"\n                  width=\"450\"\n                  height=\"280\"\n                  src={ youtubeLinkConverter(returnAPIDrink) }\n                  frameBorder=\"0\"\n                  allow=\"accelerometer; autoplay;\n                clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                  allowFullScreen\n                  title=\"Embedded youtube\"\n                />\n              </div>\n            ) }\n            <Button\n              testid=\"start-recipe-btn\"\n              label=\"Start Recipe\"\n              type=\"button\"\n              className=\"buttonstart\"\n              onClick={ () => history.push(`/drinks/${sliceLocationId}/in-progress`) }\n            />\n            <RecomendationCard />\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nexport default DetailDrink;\n"]},"metadata":{},"sourceType":"module"}