{"ast":null,"code":"var _jsxFileName = \"/home/gregory/projetos/sd-016-a-project-recipes-app/src/pages/progressDrinks/ProgressDrinks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport fetchAPI from '../../services/fetchAPI';\nimport IngredientsCheck from '../../components/IngredientsCheck/IngredientsCheck';\nimport GlobalContext from '../../context/GlobalContext';\nimport shareImg from '../../images/shareIcon.svg';\nimport whiteHeartIcon from '../../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\nimport { filterIngredientsFunc, filterMeasuresFunc, favoriteDrink, removeFavoriteDrink } from '../detailDrinks/FuncDetailDrinks';\nimport { verifyIdLocalstorageDrink, redirectFinishFunc } from './ProgressDrinksFunc';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProgressDrinks(_ref) {\n  _s();\n\n  let {\n    match\n  } = _ref;\n  const [returnAPIDrink, setReturnAPIDrink] = useState('');\n  const [checkboxList, setCheckboxList] = useState({});\n  const {\n    handleRecipeStarted\n  } = useContext(GlobalContext);\n  const {\n    params: {\n      id\n    }\n  } = match;\n  useEffect(() => {\n    const returnFetchApi = async () => {\n      const result = await fetchAPI('fetchCocktailById', id);\n      setReturnAPIDrink(result);\n    };\n\n    returnFetchApi();\n  }, [id]);\n  useEffect(() => {\n    const ingredientListCreator = async () => {\n      const result = await fetchAPI('fetchCocktailById', id);\n      const getRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n      const ingredientList = filterIngredientsFunc(result);\n\n      if (!getRecipes || Object.keys(getRecipes.cocktails[id]).length === 0) {\n        const state = ingredientList.reduce((obj, ingredient) => ({ ...obj,\n          [ingredient]: false\n        }), {});\n        setCheckboxList(state);\n        handleRecipeStarted(result.drinks[0], state);\n      } else {\n        setCheckboxList(getRecipes.cocktails[id]);\n      }\n    };\n\n    ingredientListCreator();\n  }, []);\n  const history = useHistory();\n\n  function redirectFinish() {\n    history.push('/done-recipes');\n    redirectFinishFunc(returnAPIDrink);\n  }\n\n  const handleChangeCheckBox = _ref2 => {\n    let {\n      target\n    } = _ref2;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const getRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const ingredientList = getRecipes.cocktails[id];\n    const obj = { ...ingredientList,\n      [target.name]: value\n    };\n    setCheckboxList(obj);\n    handleRecipeStarted(returnAPIDrink.drinks[0], obj);\n  };\n\n  const finishRecipeIsDisabled = () => Object.values(checkboxList).every(ingredient => ingredient);\n\n  const [linkCopy, setLinkCopy] = useState(false);\n\n  const linkC = () => {\n    const linkForCopy = window.location.href.split('/in-progress')[0];\n    copy(linkForCopy);\n    setLinkCopy(true);\n  };\n\n  const [favoriteButt, setFavoriteButt] = useState(false);\n  useEffect(() => {\n    const verifyIdLocalstorageValue = async () => {\n      const response = await verifyIdLocalstorageDrink(id);\n\n      if (response) {\n        setFavoriteButt(true);\n      }\n    };\n\n    verifyIdLocalstorageValue();\n  }, [returnAPIDrink]); // isFavorite\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: returnAPIDrink && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Drinks in Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        \"data-testid\": \"recipe-photo\",\n        alt: \"Img\",\n        src: returnAPIDrink.drinks[0].strDrinkThumb,\n        width: \"200px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        \"data-testid\": \"recipe-title\",\n        children: returnAPIDrink.drinks[0].strDrink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        \"data-testid\": \"recipe-category\",\n        children: returnAPIDrink.drinks[0].strAlcoholic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": \"share-btn\",\n        type: \"button\",\n        onClick: linkC,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: shareImg,\n          alt: \"share icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this), linkCopy ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Link copied!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 26\n      }, this) : null, !favoriteButt ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          favoriteDrink(returnAPIDrink);\n          setFavoriteButt(true);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          \"data-testid\": \"favorite-btn\",\n          src: whiteHeartIcon,\n          alt: \"whiteHeartIcon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          removeFavoriteDrink();\n          setFavoriteButt(false);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          \"data-testid\": \"favorite-btn\",\n          src: blackHeartIcon,\n          alt: \"blackHeartIcon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"instructions\",\n        children: returnAPIDrink.drinks[0].strInstructions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this), Object.values(checkboxList).length > 0 && /*#__PURE__*/_jsxDEV(IngredientsCheck, {\n        ingredients: filterIngredientsFunc(returnAPIDrink),\n        measures: filterMeasuresFunc(returnAPIDrink),\n        handleChange: handleChangeCheckBox,\n        checkboxList: checkboxList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"data-testid\": \"finish-recipe-btn\",\n        className: \"finish-drink-btn\",\n        onClick: () => redirectFinish(),\n        disabled: !finishRecipeIsDisabled(),\n        children: \"Finish Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProgressDrinks, \"MVfcjxjSEf3WiN8/1lfnaQZYJpw=\", false, function () {\n  return [useHistory];\n});\n\n_c = ProgressDrinks;\nProgressDrinks.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    })\n  })\n};\nProgressDrinks.defaultProps = {\n  match: {}\n};\nexport default ProgressDrinks;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProgressDrinks\");","map":{"version":3,"sources":["/home/gregory/projetos/sd-016-a-project-recipes-app/src/pages/progressDrinks/ProgressDrinks.js"],"names":["React","useState","useEffect","useContext","PropTypes","useHistory","copy","fetchAPI","IngredientsCheck","GlobalContext","shareImg","whiteHeartIcon","blackHeartIcon","filterIngredientsFunc","filterMeasuresFunc","favoriteDrink","removeFavoriteDrink","verifyIdLocalstorageDrink","redirectFinishFunc","ProgressDrinks","match","returnAPIDrink","setReturnAPIDrink","checkboxList","setCheckboxList","handleRecipeStarted","params","id","returnFetchApi","result","ingredientListCreator","getRecipes","JSON","parse","localStorage","getItem","ingredientList","Object","keys","cocktails","length","state","reduce","obj","ingredient","drinks","history","redirectFinish","push","handleChangeCheckBox","target","value","type","checked","name","finishRecipeIsDisabled","values","every","linkCopy","setLinkCopy","linkC","linkForCopy","window","location","href","split","favoriteButt","setFavoriteButt","verifyIdLocalstorageValue","response","strDrinkThumb","strDrink","strAlcoholic","strInstructions","propTypes","shape","string","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport fetchAPI from '../../services/fetchAPI';\nimport IngredientsCheck from '../../components/IngredientsCheck/IngredientsCheck';\nimport GlobalContext from '../../context/GlobalContext';\nimport shareImg from '../../images/shareIcon.svg';\nimport whiteHeartIcon from '../../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\n\nimport {\n  filterIngredientsFunc,\n  filterMeasuresFunc,\n  favoriteDrink,\n  removeFavoriteDrink,\n\n} from '../detailDrinks/FuncDetailDrinks';\n\nimport {\n  verifyIdLocalstorageDrink,\n  redirectFinishFunc,\n} from './ProgressDrinksFunc';\n\nfunction ProgressDrinks({ match }) {\n  const [returnAPIDrink, setReturnAPIDrink] = useState('');\n  const [checkboxList, setCheckboxList] = useState({});\n  const {\n    handleRecipeStarted,\n  } = useContext(GlobalContext);\n\n  const { params: { id } } = match;\n\n  useEffect(() => {\n    const returnFetchApi = async () => {\n      const result = await fetchAPI('fetchCocktailById', id);\n      setReturnAPIDrink(result);\n    };\n    returnFetchApi();\n  }, [id]);\n\n  useEffect(() => {\n    const ingredientListCreator = async () => {\n      const result = await fetchAPI('fetchCocktailById', id);\n      const getRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n      const ingredientList = filterIngredientsFunc(result);\n      if (!getRecipes || Object.keys(getRecipes.cocktails[id]).length === 0) {\n        const state = ingredientList.reduce((obj, ingredient) => ({\n          ...obj,\n          [ingredient]: false,\n        }), {});\n        setCheckboxList(state);\n        handleRecipeStarted(result.drinks[0], state);\n      } else {\n        setCheckboxList(getRecipes.cocktails[id]);\n      }\n    };\n    ingredientListCreator();\n  }, []);\n\n  const history = useHistory();\n\n  function redirectFinish() {\n    history.push('/done-recipes');\n    redirectFinishFunc(returnAPIDrink);\n  }\n\n  const handleChangeCheckBox = ({ target }) => {\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const getRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const ingredientList = getRecipes.cocktails[id];\n    const obj = {\n      ...ingredientList,\n      [target.name]: value,\n    };\n    setCheckboxList(obj);\n    handleRecipeStarted(returnAPIDrink.drinks[0], obj);\n  };\n\n  const finishRecipeIsDisabled = () => Object.values(checkboxList)\n    .every((ingredient) => ingredient);\n\n  const [linkCopy, setLinkCopy] = useState(false);\n  const linkC = () => {\n    const linkForCopy = window.location.href.split('/in-progress')[0];\n    copy(linkForCopy);\n    setLinkCopy(true);\n  };\n\n  const [favoriteButt, setFavoriteButt] = useState(false);\n\n  useEffect(() => {\n    const verifyIdLocalstorageValue = async () => {\n      const response = await verifyIdLocalstorageDrink(id);\n      if (response) {\n        setFavoriteButt(true);\n      }\n    };\n    verifyIdLocalstorageValue();\n  }, [returnAPIDrink]); // isFavorite\n\n  return (\n    <div>\n      {\n        returnAPIDrink\n        && (\n          <div>\n            <h2>Drinks in Progress</h2>\n            <img\n              data-testid=\"recipe-photo\"\n              alt=\"Img\"\n              src={ returnAPIDrink.drinks[0].strDrinkThumb }\n              width=\"200px\"\n            />\n            <h2 data-testid=\"recipe-title\">{returnAPIDrink.drinks[0].strDrink}</h2>\n\n            <h4 data-testid=\"recipe-category\">{returnAPIDrink.drinks[0].strAlcoholic}</h4>\n\n            <button\n              data-testid=\"share-btn\"\n              type=\"button\"\n              onClick={ linkC }\n            >\n              <img src={ shareImg } alt=\"share icon\" />\n            </button>\n            { linkCopy ? <p>Link copied!</p> : null }\n\n            { !favoriteButt\n              ? (\n                <button\n                  type=\"button\"\n                  onClick={ () => {\n                    favoriteDrink(returnAPIDrink);\n                    setFavoriteButt(true);\n                  } }\n                >\n                  <img\n                    data-testid=\"favorite-btn\"\n                    src={ whiteHeartIcon }\n                    alt=\"whiteHeartIcon\"\n                  />\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  onClick={ () => {\n                    removeFavoriteDrink();\n                    setFavoriteButt(false);\n                  } }\n                >\n                  <img\n                    data-testid=\"favorite-btn\"\n                    src={ blackHeartIcon }\n                    alt=\"blackHeartIcon\"\n                  />\n                </button>\n              ) }\n\n            <p data-testid=\"instructions\">{returnAPIDrink.drinks[0].strInstructions}</p>\n\n            {Object.values(checkboxList).length > 0 && (\n              <IngredientsCheck\n                ingredients={ filterIngredientsFunc(returnAPIDrink) }\n                measures={ filterMeasuresFunc(returnAPIDrink) }\n                handleChange={ handleChangeCheckBox }\n                checkboxList={ checkboxList }\n              />\n            )}\n\n            <button\n              type=\"button\"\n              data-testid=\"finish-recipe-btn\"\n              className=\"finish-drink-btn\"\n              onClick={ () => redirectFinish() }\n              disabled={ !finishRecipeIsDisabled() }\n            >\n              Finish Recipe\n            </button>\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nProgressDrinks.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }),\n};\n\nProgressDrinks.defaultProps = {\n  match: {},\n};\n\nexport default ProgressDrinks;\n"]},"metadata":{},"sourceType":"module"}