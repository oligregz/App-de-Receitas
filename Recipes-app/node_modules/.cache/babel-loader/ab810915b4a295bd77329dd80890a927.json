{"ast":null,"code":"var _jsxFileName = \"/home/gregory/projetos/sd-016-a-project-recipes-app/src/pages/foods/Foods.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Footer from '../../components/footer/Footer';\nimport Header from '../../components/header/Header';\nimport GlobalContext from '../../context/GlobalContext';\nimport fetchAPI from '../../services/fetchAPI';\nimport Categories from '../../components/categories/Categories';\nimport fetchByCategoryAPI from '../../services/fetchByCategoryAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Foods() {\n  _s();\n\n  const {\n    renderFoodRecipes,\n    filterResult,\n    setfilterResult\n  } = useContext(GlobalContext);\n  const location = useLocation();\n  const [recipes, setRecipes] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('');\n\n  const mainScreenMeals = async () => {\n    const mainScreenRecipes = await fetchAPI('fetchMealByName', '');\n    setRecipes(mainScreenRecipes);\n  };\n\n  const filterByCategory = async category => {\n    if (selectedCategory === category || category === 'all') {\n      const mainScreenRecipes = await fetchAPI('fetchMealByName', '');\n      setfilterResult(mainScreenRecipes);\n      setSelectedCategory('');\n    } else {\n      const responseAPI = await fetchByCategoryAPI(location.pathname, category);\n      setfilterResult(responseAPI);\n      setSelectedCategory(category);\n    }\n  };\n\n  useEffect(() => {\n    if (filterResult) {\n      setRecipes(filterResult);\n    }\n\n    mainScreenMeals();\n  }, []);\n  useEffect(() => {\n    setRecipes(filterResult);\n  }, [filterResult]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      label: \"Foods\",\n      testid: \"page-title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Categories, {\n      onClick: filterByCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), recipes && renderFoodRecipes(recipes.meals), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Foods, \"hzxYLbjJ01C4ymzSOxVU7/JgtZc=\", false, function () {\n  return [useLocation];\n});\n\n_c = Foods;\nexport default Foods;\n\nvar _c;\n\n$RefreshReg$(_c, \"Foods\");","map":{"version":3,"sources":["/home/gregory/projetos/sd-016-a-project-recipes-app/src/pages/foods/Foods.js"],"names":["React","useContext","useEffect","useState","useLocation","Footer","Header","GlobalContext","fetchAPI","Categories","fetchByCategoryAPI","Foods","renderFoodRecipes","filterResult","setfilterResult","location","recipes","setRecipes","selectedCategory","setSelectedCategory","mainScreenMeals","mainScreenRecipes","filterByCategory","category","responseAPI","pathname","meals"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM;AACJC,IAAAA,iBADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA;AAHI,MAIFb,UAAU,CAACM,aAAD,CAJd;AAMA,QAAMQ,QAAQ,GAAGX,WAAW,EAA5B;AAEA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACe,gBAAD,EAAmBC,mBAAnB,IAA0ChB,QAAQ,CAAC,EAAD,CAAxD;;AAEA,QAAMiB,eAAe,GAAG,YAAY;AAClC,UAAMC,iBAAiB,GAAG,MAAMb,QAAQ,CAAC,iBAAD,EAAoB,EAApB,CAAxC;AACAS,IAAAA,UAAU,CAACI,iBAAD,CAAV;AACD,GAHD;;AAKA,QAAMC,gBAAgB,GAAG,MAAOC,QAAP,IAAoB;AAC3C,QAAIL,gBAAgB,KAAKK,QAArB,IAAiCA,QAAQ,KAAK,KAAlD,EAAyD;AACvD,YAAMF,iBAAiB,GAAG,MAAMb,QAAQ,CAAC,iBAAD,EAAoB,EAApB,CAAxC;AACAM,MAAAA,eAAe,CAACO,iBAAD,CAAf;AACAF,MAAAA,mBAAmB,CAAC,EAAD,CAAnB;AACD,KAJD,MAIO;AACL,YAAMK,WAAW,GAAG,MAAMd,kBAAkB,CAACK,QAAQ,CAACU,QAAV,EAAoBF,QAApB,CAA5C;AACAT,MAAAA,eAAe,CAACU,WAAD,CAAf;AACAL,MAAAA,mBAAmB,CAACI,QAAD,CAAnB;AACD;AACF,GAVD;;AAYArB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,YAAJ,EAAkB;AAChBI,MAAAA,UAAU,CAACJ,YAAD,CAAV;AACD;;AACDO,IAAAA,eAAe;AAChB,GALQ,EAKN,EALM,CAAT;AAOAlB,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,UAAU,CAACJ,YAAD,CAAV;AACD,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;AAIA,sBACE;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,KAAK,EAAC,OADR;AAEE,MAAA,MAAM,EAAC;AAFT;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,UAAD;AACE,MAAA,OAAO,EAAGS;AADZ;AAAA;AAAA;AAAA;AAAA,YALF,EAQGN,OAAO,IAAIJ,iBAAiB,CAACI,OAAO,CAACU,KAAT,CAR/B,eASE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GArDQf,K;UAOUP,W;;;KAPVO,K;AAuDT,eAAeA,KAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Footer from '../../components/footer/Footer';\nimport Header from '../../components/header/Header';\nimport GlobalContext from '../../context/GlobalContext';\nimport fetchAPI from '../../services/fetchAPI';\nimport Categories from '../../components/categories/Categories';\nimport fetchByCategoryAPI from '../../services/fetchByCategoryAPI';\n\nfunction Foods() {\n  const {\n    renderFoodRecipes,\n    filterResult,\n    setfilterResult,\n  } = useContext(GlobalContext);\n\n  const location = useLocation();\n\n  const [recipes, setRecipes] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('');\n\n  const mainScreenMeals = async () => {\n    const mainScreenRecipes = await fetchAPI('fetchMealByName', '');\n    setRecipes(mainScreenRecipes);\n  };\n\n  const filterByCategory = async (category) => {\n    if (selectedCategory === category || category === 'all') {\n      const mainScreenRecipes = await fetchAPI('fetchMealByName', '');\n      setfilterResult(mainScreenRecipes);\n      setSelectedCategory('');\n    } else {\n      const responseAPI = await fetchByCategoryAPI(location.pathname, category);\n      setfilterResult(responseAPI);\n      setSelectedCategory(category);\n    }\n  };\n\n  useEffect(() => {\n    if (filterResult) {\n      setRecipes(filterResult);\n    }\n    mainScreenMeals();\n  }, []);\n\n  useEffect(() => {\n    setRecipes(filterResult);\n  }, [filterResult]);\n\n  return (\n    <div>\n      <Header\n        label=\"Foods\"\n        testid=\"page-title\"\n      />\n      <Categories\n        onClick={ filterByCategory }\n      />\n      {recipes && renderFoodRecipes(recipes.meals)}\n      <Footer />\n    </div>\n  );\n}\n\nexport default Foods;\n"]},"metadata":{},"sourceType":"module"}