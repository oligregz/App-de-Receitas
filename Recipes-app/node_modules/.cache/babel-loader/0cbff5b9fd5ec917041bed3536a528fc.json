{"ast":null,"code":"var _jsxFileName = \"/home/gregory/projetos/sd-016-a-project-recipes-app/src/pages/detailDrinks/DetailDrinks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport shareImg from '../../images/shareIcon.svg';\nimport Button from '../../components/button/Button';\nimport IngredientsList from '../../components/ingredientList/IngredientList';\nimport fetchAPI from '../../services/fetchAPI';\nimport './DetailDrinks.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CUT = '/drinks/';\n\nfunction DetailDrink() {\n  _s();\n\n  const [returnAPIDrink, setReturnAPIDrink] = useState('');\n  const location = useLocation();\n  const sliceLocationId = location.pathname.split(CUT)[1];\n  useEffect(() => {\n    const returnFetchApi = async () => {\n      const result = await fetchAPI('fetchCocktailById', sliceLocationId);\n      setReturnAPIDrink(result);\n    };\n\n    returnFetchApi();\n  }, [sliceLocationId]);\n\n  const filterIngredientsFunc = () => {\n    if (returnAPIDrink) {\n      const drinksIngredients = Object.entries(returnAPIDrink.drinks[0]).filter(key => key[0].includes('strIngredient') && key[1]).map(e => e[1]);\n      return drinksIngredients;\n    }\n  };\n\n  const filterMeasuresFunc = () => {\n    if (returnAPIDrink) {\n      const drinksMeasures = Object.entries(returnAPIDrink.drinks[0]).filter(key => key[0].includes('strMeasure') && key[1]).map(e => e[1]);\n      return drinksMeasures;\n    }\n  };\n\n  const youtubeLinkConverter = () => {\n    if (returnAPIDrink) {\n      const youtubeAPI = returnAPIDrink.drinks[0].strVideo; // console.log(youtubeAPI);\n\n      if (youtubeAPI) {\n        const youtubeAPISlipted = youtubeAPI.split('https://www.youtube.com/watch?v=')[1]; // console.log(youtubeAPISlipted);\n\n        return `https://www.youtube.com/embed/${youtubeAPISlipted}`;\n      }\n\n      return null;\n    }\n  };\n\n  const history = useHistory();\n  const [linkCopy, setLinkCopy] = useState(false);\n\n  const linkC = () => {\n    copy(window.location.href);\n    setLinkCopy(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: returnAPIDrink && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        \"data-testid\": \"recipe-photo\",\n        src: returnAPIDrink.drinks[0].strDrinkThumb,\n        alt: \"img\",\n        width: \"200px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"title\", {\n        \"data-testid\": \"recipe-title\",\n        children: returnAPIDrink.drinks[0].strDrink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": \"share-btn\",\n        type: \"button\",\n        onClick: linkC,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: shareImg,\n          alt: \"share icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), linkCopy ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Link copied!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 23\n      }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n        testid: \"favorite-btn\",\n        label: \"favorite\",\n        type: \"button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"recipe-category\",\n        children: returnAPIDrink.drinks[0].strAlcoholic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(IngredientsList, {\n        ingredients: filterIngredientsFunc(),\n        measures: filterMeasuresFunc()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-testid\": \"instructions\",\n        children: returnAPIDrink.drinks[0].strInstructions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), youtubeLinkConverter && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          \"data-testid\": \"video\",\n          width: \"450\",\n          height: \"280\",\n          src: youtubeLinkConverter(),\n          frameBorder: \"0\",\n          allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n          allowFullScreen: true,\n          title: \"Embedded youtube\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        \"data-testid\": \"0-recomendation-card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        testid: \"start-recipe-btn\",\n        label: \"Start Recipe\",\n        type: \"button\",\n        className: \"buttonstart\",\n        onClick: () => history.push(`/drinks/${sliceLocationId}/in-progress`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DetailDrink, \"C7oeL7Xco2Eq6uoCDsDx5hBd92c=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = DetailDrink;\nexport default DetailDrink;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailDrink\");","map":{"version":3,"sources":["/home/gregory/projetos/sd-016-a-project-recipes-app/src/pages/detailDrinks/DetailDrinks.js"],"names":["React","useState","useEffect","useLocation","useHistory","copy","shareImg","Button","IngredientsList","fetchAPI","CUT","DetailDrink","returnAPIDrink","setReturnAPIDrink","location","sliceLocationId","pathname","split","returnFetchApi","result","filterIngredientsFunc","drinksIngredients","Object","entries","drinks","filter","key","includes","map","e","filterMeasuresFunc","drinksMeasures","youtubeLinkConverter","youtubeAPI","strVideo","youtubeAPISlipted","history","linkCopy","setLinkCopy","linkC","window","href","strDrinkThumb","strDrink","strAlcoholic","strInstructions","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport shareImg from '../../images/shareIcon.svg';\nimport Button from '../../components/button/Button';\nimport IngredientsList from '../../components/ingredientList/IngredientList';\nimport fetchAPI from '../../services/fetchAPI';\nimport './DetailDrinks.css';\n\nconst CUT = '/drinks/';\nfunction DetailDrink() {\n  const [returnAPIDrink, setReturnAPIDrink] = useState('');\n  const location = useLocation();\n  const sliceLocationId = location.pathname.split(CUT)[1];\n\n  useEffect(() => {\n    const returnFetchApi = async () => {\n      const result = await fetchAPI('fetchCocktailById', sliceLocationId);\n      setReturnAPIDrink(result);\n    };\n    returnFetchApi();\n  }, [sliceLocationId]);\n\n  const filterIngredientsFunc = () => {\n    if (returnAPIDrink) {\n      const drinksIngredients = Object.entries(returnAPIDrink.drinks[0])\n        .filter((key) => key[0].includes('strIngredient') && key[1])\n        .map((e) => e[1]);\n      return drinksIngredients;\n    }\n  };\n\n  const filterMeasuresFunc = () => {\n    if (returnAPIDrink) {\n      const drinksMeasures = Object.entries(returnAPIDrink.drinks[0])\n        .filter((key) => key[0].includes('strMeasure') && key[1])\n        .map((e) => e[1]);\n      return drinksMeasures;\n    }\n  };\n\n  const youtubeLinkConverter = () => {\n    if (returnAPIDrink) {\n      const youtubeAPI = returnAPIDrink.drinks[0].strVideo;\n      // console.log(youtubeAPI);\n      if (youtubeAPI) {\n        const youtubeAPISlipted = youtubeAPI.split('https://www.youtube.com/watch?v=')[1];\n        // console.log(youtubeAPISlipted);\n        return `https://www.youtube.com/embed/${youtubeAPISlipted}`;\n      } return null;\n    }\n  };\n\n  const history = useHistory();\n  const [linkCopy, setLinkCopy] = useState(false);\n  const linkC = () => {\n    copy(window.location.href);\n    setLinkCopy(true);\n  };\n\n  return (\n    <div>\n      {\n        returnAPIDrink\n      && (\n        <div>\n          <img\n            data-testid=\"recipe-photo\"\n            src={ returnAPIDrink.drinks[0].strDrinkThumb }\n            alt=\"img\"\n            width=\"200px\"\n          />\n          <title\n            data-testid=\"recipe-title\"\n          >\n            { returnAPIDrink.drinks[0].strDrink }\n          </title>\n          <button\n            data-testid=\"share-btn\"\n            type=\"button\"\n            onClick={ linkC }\n          >\n            <img src={ shareImg } alt=\"share icon\" />\n          </button>\n          {linkCopy ? <p>Link copied!</p> : null}\n          <Button\n            testid=\"favorite-btn\"\n            label=\"favorite\"\n            type=\"button\"\n          />\n          <p data-testid=\"recipe-category\">{returnAPIDrink.drinks[0].strAlcoholic}</p>\n          <IngredientsList\n            ingredients={ filterIngredientsFunc() }\n            measures={ filterMeasuresFunc() }\n          />\n          <div data-testid=\"instructions\">\n            {returnAPIDrink.drinks[0].strInstructions}\n          </div>\n          {youtubeLinkConverter && (\n            <div>\n              <iframe\n                data-testid=\"video\"\n                width=\"450\"\n                height=\"280\"\n                src={ youtubeLinkConverter() }\n                frameBorder=\"0\"\n                allow=\"accelerometer; autoplay;\n                clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen\n                title=\"Embedded youtube\"\n              />\n            </div>\n          )}\n          <span data-testid=\"0-recomendation-card\" />\n          <Button\n            testid=\"start-recipe-btn\"\n            label=\"Start Recipe\"\n            type=\"button\"\n            className=\"buttonstart\"\n            onClick={ () => history.push(`/drinks/${sliceLocationId}/in-progress`) }\n          />\n        </div>\n      )\n      }\n    </div>\n  );\n}\n\nexport default DetailDrink;\n"]},"metadata":{},"sourceType":"module"}