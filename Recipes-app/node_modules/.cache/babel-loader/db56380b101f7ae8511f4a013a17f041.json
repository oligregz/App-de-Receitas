{"ast":null,"code":"import fetchAPI from '../../services/fetchAPI';\nexport const redirectFinishFunc = returnAPI => {\n  const arrayRecipeDone = localStorage.getItem('doneRecipes');\n  const now = new Date();\n  const dataDoneRecipe = `${now.getDate()}/${now.getMonth()}/${now.getFullYear()}`;\n  const {\n    idMeal,\n    strCategory,\n    strMeal,\n    strMealThumb,\n    strTags,\n    strArea\n  } = returnAPI.meals[0];\n  const tagsArray = strTags.split(',');\n  const doneRecipes = {\n    id: idMeal,\n    type: 'food',\n    category: strCategory,\n    alcoholicOrNot: '',\n    name: strMeal,\n    image: strMealThumb,\n    doneDate: dataDoneRecipe,\n    tags: tagsArray,\n    nationality: strArea\n  };\n  const doneRecipesLocalstorage = arrayRecipeDone ? [...JSON.parse(arrayRecipeDone), doneRecipes] : [doneRecipes];\n  localStorage.setItem('doneRecipes', JSON.stringify(doneRecipesLocalstorage));\n};\nexport const verifyIdLocalstorage = async id => {\n  const returnAPI = await fetchAPI('fetchMealById', id);\n  const getRecipeLocalstorage = localStorage.getItem('favoriteRecipes');\n  const recipeIdLocalstorage = JSON.parse(getRecipeLocalstorage);\n\n  if (returnAPI && recipeIdLocalstorage) {\n    recipeIdLocalstorage.map(value => returnAPI.meals[0].idMeal === value.id);\n    return true;\n  }\n\n  return false;\n};","map":{"version":3,"sources":["/home/gregory/projetos/sd-016-a-project-recipes-app/src/pages/progressFoods/ProgressFoodsFunc.js"],"names":["fetchAPI","redirectFinishFunc","returnAPI","arrayRecipeDone","localStorage","getItem","now","Date","dataDoneRecipe","getDate","getMonth","getFullYear","idMeal","strCategory","strMeal","strMealThumb","strTags","strArea","meals","tagsArray","split","doneRecipes","id","type","category","alcoholicOrNot","name","image","doneDate","tags","nationality","doneRecipesLocalstorage","JSON","parse","setItem","stringify","verifyIdLocalstorage","getRecipeLocalstorage","recipeIdLocalstorage","map","value"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,yBAArB;AAEA,OAAO,MAAMC,kBAAkB,GAAIC,SAAD,IAAe;AAC/C,QAAMC,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAxB;AACA,QAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AACA,QAAMC,cAAc,GAAI,GAAEF,GAAG,CAACG,OAAJ,EAAc,IAAGH,GAAG,CAACI,QAAJ,EAAe,IAAGJ,GAAG,CAACK,WAAJ,EAAkB,EAA/E;AACA,QAAM;AACJC,IAAAA,MADI;AACIC,IAAAA,WADJ;AACiBC,IAAAA,OADjB;AAC0BC,IAAAA,YAD1B;AACwCC,IAAAA,OADxC;AACiDC,IAAAA;AADjD,MAEFf,SAAS,CAACgB,KAAV,CAAgB,CAAhB,CAFJ;AAGA,QAAMC,SAAS,GAAGH,OAAO,CAACI,KAAR,CAAc,GAAd,CAAlB;AACA,QAAMC,WAAW,GAAG;AAClBC,IAAAA,EAAE,EAAEV,MADc;AAElBW,IAAAA,IAAI,EAAE,MAFY;AAGlBC,IAAAA,QAAQ,EAAEX,WAHQ;AAIlBY,IAAAA,cAAc,EAAE,EAJE;AAKlBC,IAAAA,IAAI,EAAEZ,OALY;AAMlBa,IAAAA,KAAK,EAAEZ,YANW;AAOlBa,IAAAA,QAAQ,EAAEpB,cAPQ;AAQlBqB,IAAAA,IAAI,EAAEV,SARY;AASlBW,IAAAA,WAAW,EAAEb;AATK,GAApB;AAYA,QAAMc,uBAAuB,GAAG5B,eAAe,GAC3C,CAAC,GAAG6B,IAAI,CAACC,KAAL,CAAW9B,eAAX,CAAJ,EAAiCkB,WAAjC,CAD2C,GACK,CAACA,WAAD,CADpD;AAEAjB,EAAAA,YAAY,CAAC8B,OAAb,CAAqB,aAArB,EACEF,IAAI,CAACG,SAAL,CAAeJ,uBAAf,CADF;AAED,CAxBM;AA0BP,OAAO,MAAMK,oBAAoB,GAAG,MAAOd,EAAP,IAAc;AAChD,QAAMpB,SAAS,GAAG,MAAMF,QAAQ,CAAC,eAAD,EAAkBsB,EAAlB,CAAhC;AACA,QAAMe,qBAAqB,GAAGjC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAA9B;AACA,QAAMiC,oBAAoB,GAAGN,IAAI,CAACC,KAAL,CAAWI,qBAAX,CAA7B;;AACA,MAAInC,SAAS,IAAIoC,oBAAjB,EAAuC;AACrCA,IAAAA,oBAAoB,CAACC,GAArB,CAA0BC,KAAD,IAAWtC,SAAS,CAACgB,KAAV,CAAgB,CAAhB,EAAmBN,MAAnB,KAA8B4B,KAAK,CAAClB,EAAxE;AACA,WAAO,IAAP;AACD;;AAAC,SAAO,KAAP;AACH,CARM","sourcesContent":["import fetchAPI from '../../services/fetchAPI';\n\nexport const redirectFinishFunc = (returnAPI) => {\n  const arrayRecipeDone = localStorage.getItem('doneRecipes');\n  const now = new Date();\n  const dataDoneRecipe = `${now.getDate()}/${now.getMonth()}/${now.getFullYear()}`;\n  const {\n    idMeal, strCategory, strMeal, strMealThumb, strTags, strArea,\n  } = returnAPI.meals[0];\n  const tagsArray = strTags.split(',');\n  const doneRecipes = {\n    id: idMeal,\n    type: 'food',\n    category: strCategory,\n    alcoholicOrNot: '',\n    name: strMeal,\n    image: strMealThumb,\n    doneDate: dataDoneRecipe,\n    tags: tagsArray,\n    nationality: strArea,\n  };\n\n  const doneRecipesLocalstorage = arrayRecipeDone\n    ? [...JSON.parse(arrayRecipeDone), doneRecipes] : [doneRecipes];\n  localStorage.setItem('doneRecipes',\n    JSON.stringify(doneRecipesLocalstorage));\n};\n\nexport const verifyIdLocalstorage = async (id) => {\n  const returnAPI = await fetchAPI('fetchMealById', id);\n  const getRecipeLocalstorage = localStorage.getItem('favoriteRecipes');\n  const recipeIdLocalstorage = JSON.parse(getRecipeLocalstorage);\n  if (returnAPI && recipeIdLocalstorage) {\n    recipeIdLocalstorage.map((value) => returnAPI.meals[0].idMeal === value.id);\n    return true;\n  } return false;\n};\n"]},"metadata":{},"sourceType":"module"}