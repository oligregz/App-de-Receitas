{"ast":null,"code":"var _jsxFileName = \"/home/gregory/projetos/sd-016-a-project-recipes-app/src/context/GlobalProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport GlobalContext from './GlobalContext';\nimport fetchAPI from '../services/fetchAPI';\nimport Card from '../components/card/card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GlobalProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [buttonLogin, setButtonLogin] = useState({\n    disabledButt: true\n  });\n  const [showSearchBar, setShowSearchBar] = useState(false);\n  const [search, setBySearch] = useState('');\n  const [radioSelected, setRadioSelected] = useState('');\n  const [filterResult, setfilterResult] = useState('');\n  const [ingredients, setIngredients] = useState([]);\n\n  const validateButton = () => {\n    const emailValid = /\\S+@\\S+\\.\\S+/.test(email);\n    const passwordLength = 6;\n\n    if (emailValid && password.length >= passwordLength) {\n      setButtonLogin({\n        disabledButt: false\n      });\n    } else {\n      setButtonLogin({\n        disabledButt: true\n      });\n    }\n  };\n\n  const handleEmail = _ref2 => {\n    let {\n      target: {\n        value\n      }\n    } = _ref2;\n    setEmail(value);\n    validateButton();\n  };\n\n  const handlePassword = _ref3 => {\n    let {\n      target: {\n        value\n      }\n    } = _ref3;\n    setPassword(value);\n    validateButton();\n  };\n\n  const handleClick = () => {\n    localStorage.setItem('mealsToken', 1);\n    localStorage.setItem('cocktailsToken', 1);\n    localStorage.setItem('user', JSON.stringify({\n      email\n    }));\n  };\n\n  const location = useLocation();\n  const history = useHistory();\n\n  const handleSearchMeals = filterData => {\n    // console.log(filterData.meals);\n    const alert = 'Sorry, we haven\\'t found any recipes for these filters.';\n\n    if (!filterData.meals) {\n      global.alert(alert);\n    } else {\n      setfilterResult(filterData); // redirect caso encontre somente um resultado.\n\n      if (location.pathname.includes('foods') && filterData.meals.length === 1) {\n        history.push(`/foods/${filterData.meals[0].idMeal}`);\n      }\n    }\n  };\n\n  const handleSearchCocktails = filterData => {\n    // console.log(filterData);\n    const alert = 'Sorry, we haven\\'t found any recipes for these filters.';\n\n    if (!filterData.drinks) {\n      global.alert(alert);\n    } else {\n      setfilterResult(filterData); // redirect caso encontre somente um resultado.\n\n      if (location.pathname.includes('drinks') && filterData.drinks.length === 1) {\n        history.push(`/drinks/${filterData.drinks[0].idDrink}`);\n      }\n    }\n  };\n\n  const handleSearchClick = () => {\n    if (location.pathname.includes('foods')) {\n      if (radioSelected === 'ingredients') {\n        fetchAPI('fetchMealByIngredient', search).then(data => handleSearchMeals(data));\n      }\n\n      if (radioSelected === 'name') {\n        fetchAPI('fetchMealByName', search).then(data => handleSearchMeals(data));\n      }\n\n      if (radioSelected === 'firstLetter') {\n        fetchAPI('fetchMealByFirstLetter', search).then(data => handleSearchMeals(data));\n      }\n    }\n\n    if (location.pathname.includes('drinks')) {\n      if (radioSelected === 'ingredients') {\n        fetchAPI('fetchCocktailByIngredient', search).then(data => handleSearchCocktails(data));\n      }\n\n      if (radioSelected === 'name') {\n        fetchAPI('fetchCocktailByName', search).then(data => handleSearchCocktails(data));\n      }\n\n      if (radioSelected === 'firstLetter') {\n        fetchAPI('fetchCocktailByFirstLetter', search).then(data => handleSearchCocktails(data));\n      }\n    }\n  };\n\n  const renderFoodRecipes = arrayOfRecipes => {\n    const MAX_MEALS = 12;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: arrayOfRecipes.slice(0, MAX_MEALS).map((recipe, i) => /*#__PURE__*/_jsxDEV(Card, {\n        index: i,\n        name: recipe.strMeal,\n        img: recipe.strMealThumb,\n        id: recipe.idMeal\n      }, recipe.idMeal, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderDrinkRecipes = arrayOfRecipes => {\n    // console.log(arrayOfRecipes);\n    const MAX_DRINKS = 12;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: arrayOfRecipes.slice(0, MAX_DRINKS).map((recipe, i) => /*#__PURE__*/_jsxDEV(Card, {\n        index: i,\n        name: recipe.strDrink,\n        img: recipe.strDrinkThumb,\n        id: recipe.idDrink\n      }, recipe.idDrink, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this);\n  };\n\n  const contextValue = {\n    handleEmail,\n    email,\n    handlePassword,\n    password,\n    buttonLogin,\n    setButtonLogin,\n    handleClick,\n    showSearchBar,\n    setShowSearchBar,\n    search,\n    setBySearch,\n    radioSelected,\n    setRadioSelected,\n    handleSearchClick,\n    filterResult,\n    setfilterResult,\n    renderFoodRecipes,\n    renderDrinkRecipes,\n    ingredients,\n    setIngredients\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GlobalProvider, \"q71RajN1cDyGBFOkauF68DBJAdc=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = GlobalProvider;\nGlobalProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"sources":["/home/gregory/projetos/sd-016-a-project-recipes-app/src/context/GlobalProvider.js"],"names":["React","useState","PropTypes","useLocation","useHistory","GlobalContext","fetchAPI","Card","GlobalProvider","children","email","setEmail","password","setPassword","buttonLogin","setButtonLogin","disabledButt","showSearchBar","setShowSearchBar","search","setBySearch","radioSelected","setRadioSelected","filterResult","setfilterResult","ingredients","setIngredients","validateButton","emailValid","test","passwordLength","length","handleEmail","target","value","handlePassword","handleClick","localStorage","setItem","JSON","stringify","location","history","handleSearchMeals","filterData","alert","meals","global","pathname","includes","push","idMeal","handleSearchCocktails","drinks","idDrink","handleSearchClick","then","data","renderFoodRecipes","arrayOfRecipes","MAX_MEALS","slice","map","recipe","i","strMeal","strMealThumb","renderDrinkRecipes","MAX_DRINKS","strDrink","strDrinkThumb","contextValue","propTypes","node","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport GlobalContext from './GlobalContext';\nimport fetchAPI from '../services/fetchAPI';\nimport Card from '../components/card/card';\n\nexport default function GlobalProvider({ children }) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [buttonLogin, setButtonLogin] = useState({ disabledButt: true });\n  const [showSearchBar, setShowSearchBar] = useState(false);\n  const [search, setBySearch] = useState('');\n  const [radioSelected, setRadioSelected] = useState('');\n  const [filterResult, setfilterResult] = useState('');\n  const [ingredients, setIngredients] = useState([]);\n\n  const validateButton = () => {\n    const emailValid = /\\S+@\\S+\\.\\S+/.test(email);\n    const passwordLength = 6;\n    if (emailValid && password.length >= passwordLength) {\n      setButtonLogin({ disabledButt: false });\n    } else {\n      setButtonLogin({ disabledButt: true });\n    }\n  };\n\n  const handleEmail = ({ target: { value } }) => {\n    setEmail(value);\n    validateButton();\n  };\n\n  const handlePassword = ({ target: { value } }) => {\n    setPassword(value);\n    validateButton();\n  };\n\n  const handleClick = () => {\n    localStorage.setItem('mealsToken', 1);\n    localStorage.setItem('cocktailsToken', 1);\n    localStorage.setItem('user', JSON.stringify({ email }));\n  };\n\n  const location = useLocation();\n  const history = useHistory();\n\n  const handleSearchMeals = (filterData) => {\n    // console.log(filterData.meals);\n    const alert = 'Sorry, we haven\\'t found any recipes for these filters.';\n    if (!filterData.meals) {\n      global.alert(alert);\n    } else {\n      setfilterResult(filterData);\n      // redirect caso encontre somente um resultado.\n      if (location.pathname.includes('foods') && filterData.meals.length === 1) {\n        history.push(`/foods/${filterData.meals[0].idMeal}`);\n      }\n    }\n  };\n\n  const handleSearchCocktails = (filterData) => {\n    // console.log(filterData);\n    const alert = 'Sorry, we haven\\'t found any recipes for these filters.';\n    if (!filterData.drinks) {\n      global.alert(alert);\n    } else {\n      setfilterResult(filterData);\n      // redirect caso encontre somente um resultado.\n      if (location.pathname.includes('drinks') && filterData.drinks.length === 1) {\n        history.push(`/drinks/${filterData.drinks[0].idDrink}`);\n      }\n    }\n  };\n\n  const handleSearchClick = () => {\n    if (location.pathname.includes('foods')) {\n      if (radioSelected === 'ingredients') {\n        fetchAPI('fetchMealByIngredient', search)\n          .then((data) => handleSearchMeals(data));\n      }\n      if (radioSelected === 'name') {\n        fetchAPI('fetchMealByName', search)\n          .then((data) => handleSearchMeals(data));\n      }\n      if (radioSelected === 'firstLetter') {\n        fetchAPI('fetchMealByFirstLetter', search)\n          .then((data) => handleSearchMeals(data));\n      }\n    }\n    if (location.pathname.includes('drinks')) {\n      if (radioSelected === 'ingredients') {\n        fetchAPI('fetchCocktailByIngredient', search)\n          .then((data) => handleSearchCocktails(data));\n      }\n      if (radioSelected === 'name') {\n        fetchAPI('fetchCocktailByName', search)\n          .then((data) => handleSearchCocktails(data));\n      }\n      if (radioSelected === 'firstLetter') {\n        fetchAPI('fetchCocktailByFirstLetter', search)\n          .then((data) => handleSearchCocktails(data));\n      }\n    }\n  };\n\n  const renderFoodRecipes = (arrayOfRecipes) => {\n    const MAX_MEALS = 12;\n    return (\n      <div>\n        { arrayOfRecipes\n          .slice(0, MAX_MEALS)\n          .map((recipe, i) => (\n            <Card\n              key={ recipe.idMeal }\n              index={ i }\n              name={ recipe.strMeal }\n              img={ recipe.strMealThumb }\n              id={ recipe.idMeal }\n            />\n          )) }\n      </div>);\n  };\n\n  const renderDrinkRecipes = (arrayOfRecipes) => {\n    // console.log(arrayOfRecipes);\n    const MAX_DRINKS = 12;\n    return (\n      <div>\n        { arrayOfRecipes\n          .slice(0, MAX_DRINKS)\n          .map((recipe, i) => (\n            <Card\n              key={ recipe.idDrink }\n              index={ i }\n              name={ recipe.strDrink }\n              img={ recipe.strDrinkThumb }\n              id={ recipe.idDrink }\n            />\n          )) }\n      </div>);\n  };\n\n  const contextValue = {\n    handleEmail,\n    email,\n    handlePassword,\n    password,\n    buttonLogin,\n    setButtonLogin,\n    handleClick,\n    showSearchBar,\n    setShowSearchBar,\n    search,\n    setBySearch,\n    radioSelected,\n    setRadioSelected,\n    handleSearchClick,\n    filterResult,\n    setfilterResult,\n    renderFoodRecipes,\n    renderDrinkRecipes,\n    ingredients,\n    setIngredients,\n  };\n  return (\n    <GlobalContext.Provider value={ contextValue }>\n      { children }\n    </GlobalContext.Provider>\n  );\n}\n\nGlobalProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}