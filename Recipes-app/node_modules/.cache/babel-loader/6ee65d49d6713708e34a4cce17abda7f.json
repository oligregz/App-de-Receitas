{"ast":null,"code":"var _jsxFileName = \"/home/gregory/projetos/sd-016-a-project-recipes-app/src/components/ingredientCard/IngredientCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport GlobalContext from '../../context/GlobalContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction IngredientCard(props) {\n  _s();\n\n  const {\n    src,\n    index,\n    alt,\n    label\n  } = props;\n  const {\n    filterByIngredient\n  } = useContext(GlobalContext);\n  const location = useLocation();\n\n  const redirectByPathname = () => {\n    if (location.pathname.includes('foods')) {\n      return '/foods';\n    }\n\n    return '/drinks';\n  };\n\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: () => redirectByPathname(),\n    onClick: () => {\n      filterByIngredient(label);\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": `${index}-ingredient-card`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: src,\n        \"data-testid\": `${index}-card-img`,\n        alt: alt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        \"data-testid\": `${index}-card-name`,\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(IngredientCard, \"5fcpJVdO78nJ5B3oUJ5Xx6AR2T0=\", false, function () {\n  return [useLocation];\n});\n\n_c = IngredientCard;\nIngredientCard.propTypes = {\n  src: PropTypes.string,\n  index: PropTypes.string,\n  alt: PropTypes.string,\n  label: PropTypes.string\n}.isRequired;\nexport default IngredientCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"IngredientCard\");","map":{"version":3,"sources":["/home/gregory/projetos/sd-016-a-project-recipes-app/src/components/ingredientCard/IngredientCard.js"],"names":["React","useContext","PropTypes","Link","useLocation","GlobalContext","IngredientCard","props","src","index","alt","label","filterByIngredient","location","redirectByPathname","pathname","includes","propTypes","string","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,kBAAlC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC7B,QAAM;AACJC,IAAAA,GADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,GAHI;AAIJC,IAAAA;AAJI,MAKFJ,KALJ;AAOA,QAAM;AACJK,IAAAA;AADI,MAEFX,UAAU,CAACI,aAAD,CAFd;AAIA,QAAMQ,QAAQ,GAAGT,WAAW,EAA5B;;AAEA,QAAMU,kBAAkB,GAAG,MAAM;AAC/B,QAAID,QAAQ,CAACE,QAAT,CAAkBC,QAAlB,CAA2B,OAA3B,CAAJ,EAAyC;AACvC,aAAO,QAAP;AACD;;AACD,WAAO,SAAP;AACD,GALD;;AAOA,sBACE,QAAC,IAAD;AACE,IAAA,EAAE,EAAG,MAAMF,kBAAkB,EAD/B;AAEE,IAAA,OAAO,EAAG,MAAM;AACdF,MAAAA,kBAAkB,CAACD,KAAD,CAAlB;AACD,KAJH;AAAA,2BAME;AACE,qBAAe,GAAEF,KAAM,kBADzB;AAAA,8BAGE;AACE,QAAA,GAAG,EAAGD,GADR;AAEE,uBAAe,GAAEC,KAAM,WAFzB;AAGE,QAAA,GAAG,EAAGC;AAHR;AAAA;AAAA;AAAA;AAAA,cAHF,eAQE;AACE,uBAAe,GAAED,KAAM,YADzB;AAAA,kBAGIE;AAHJ;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GA5CQL,c;UAYUF,W;;;KAZVE,c;AA8CTA,cAAc,CAACW,SAAf,GAA2B;AACzBT,EAAAA,GAAG,EAAEN,SAAS,CAACgB,MADU;AAEzBT,EAAAA,KAAK,EAAEP,SAAS,CAACgB,MAFQ;AAGzBR,EAAAA,GAAG,EAAER,SAAS,CAACgB,MAHU;AAIzBP,EAAAA,KAAK,EAAET,SAAS,CAACgB;AAJQ,EAKzBC,UALF;AAOA,eAAeb,cAAf","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport GlobalContext from '../../context/GlobalContext';\n\nfunction IngredientCard(props) {\n  const {\n    src,\n    index,\n    alt,\n    label,\n  } = props;\n\n  const {\n    filterByIngredient,\n  } = useContext(GlobalContext);\n\n  const location = useLocation();\n\n  const redirectByPathname = () => {\n    if (location.pathname.includes('foods')) {\n      return '/foods';\n    }\n    return '/drinks';\n  };\n\n  return (\n    <Link\n      to={ () => redirectByPathname() }\n      onClick={ () => {\n        filterByIngredient(label);\n      } }\n    >\n      <div\n        data-testid={ `${index}-ingredient-card` }\n      >\n        <img\n          src={ src }\n          data-testid={ `${index}-card-img` }\n          alt={ alt }\n        />\n        <h3\n          data-testid={ `${index}-card-name` }\n        >\n          { label }\n        </h3>\n      </div>\n    </Link>\n  );\n}\n\nIngredientCard.propTypes = {\n  src: PropTypes.string,\n  index: PropTypes.string,\n  alt: PropTypes.string,\n  label: PropTypes.string,\n}.isRequired;\n\nexport default IngredientCard;\n"]},"metadata":{},"sourceType":"module"}