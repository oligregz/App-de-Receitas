{"ast":null,"code":"export const filterIngredientsFunc = returnAPI => {\n  if (returnAPI) {\n    const mealsIngredients = Object.entries(returnAPI.meals[0]).filter(key => key[0].includes('strIngredient') && key[1]).map(e => e[1]);\n    return mealsIngredients;\n  }\n};\nexport const filterMeasuresFunc = returnAPI => {\n  if (returnAPI) {\n    const mealsMeasures = Object.entries(returnAPI.meals[0]).filter(key => key[0].includes('strMeasure') && key[1]).map(e => e[1]);\n    return mealsMeasures;\n  }\n};\nexport const youtubeLinkConverter = returnAPI => {\n  const youtubeAPI = returnAPI.meals[0].strYoutube;\n  const youtubeAPISlipted = youtubeAPI.split('https://www.youtube.com/watch?v=')[1];\n  return `https://www.youtube.com/embed/${youtubeAPISlipted}`;\n};\nexport const favoriteFood = returnAPI => {\n  const arrayRecipe = localStorage.getItem('favoriteRecipes');\n  const {\n    idMeal,\n    strArea,\n    strCategory,\n    strMeal,\n    strMealThumb\n  } = returnAPI.meals[0];\n  const newRecipe = {\n    id: idMeal,\n    type: 'food',\n    nationality: strArea,\n    category: strCategory,\n    alcoholicOrNot: '',\n    name: strMeal,\n    image: strMealThumb\n  };\n  const favoriteRecipes = arrayRecipe ? [...JSON.parse(arrayRecipe), newRecipe] : [newRecipe];\n  localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteRecipes));\n};\nexport const removeFavoriteFood = id => {\n  const arrayRecipe = localStorage.getItem('favoriteRecipes');\n  const newArray = JSON.parse(arrayRecipe).filter(filtered => filtered.id !== id);\n  localStorage.setItem('favoriteRecipes', JSON.stringify(newArray));\n};","map":{"version":3,"sources":["/home/gregory/projetos/sd-016-a-project-recipes-app/src/pages/detailFoods/FuncDetailFoods.js"],"names":["filterIngredientsFunc","returnAPI","mealsIngredients","Object","entries","meals","filter","key","includes","map","e","filterMeasuresFunc","mealsMeasures","youtubeLinkConverter","youtubeAPI","strYoutube","youtubeAPISlipted","split","favoriteFood","arrayRecipe","localStorage","getItem","idMeal","strArea","strCategory","strMeal","strMealThumb","newRecipe","id","type","nationality","category","alcoholicOrNot","name","image","favoriteRecipes","JSON","parse","setItem","stringify","removeFavoriteFood","newArray","filtered"],"mappings":"AAAA,OAAO,MAAMA,qBAAqB,GAAIC,SAAD,IAAe;AAClD,MAAIA,SAAJ,EAAe;AACb,UAAMC,gBAAgB,GAAGC,MAAM,CAACC,OAAP,CAAeH,SAAS,CAACI,KAAV,CAAgB,CAAhB,CAAf,EACtBC,MADsB,CACdC,GAAD,IAASA,GAAG,CAAC,CAAD,CAAH,CAAOC,QAAP,CAAgB,eAAhB,KAAoCD,GAAG,CAAC,CAAD,CADjC,EAEtBE,GAFsB,CAEjBC,CAAD,IAAOA,CAAC,CAAC,CAAD,CAFU,CAAzB;AAGA,WAAOR,gBAAP;AACD;AACF,CAPM;AASP,OAAO,MAAMS,kBAAkB,GAAIV,SAAD,IAAe;AAC/C,MAAIA,SAAJ,EAAe;AACb,UAAMW,aAAa,GAAGT,MAAM,CAACC,OAAP,CAAeH,SAAS,CAACI,KAAV,CAAgB,CAAhB,CAAf,EACnBC,MADmB,CACXC,GAAD,IAASA,GAAG,CAAC,CAAD,CAAH,CAAOC,QAAP,CAAgB,YAAhB,KAAiCD,GAAG,CAAC,CAAD,CADjC,EAEnBE,GAFmB,CAEdC,CAAD,IAAOA,CAAC,CAAC,CAAD,CAFO,CAAtB;AAGA,WAAOE,aAAP;AACD;AACF,CAPM;AASP,OAAO,MAAMC,oBAAoB,GAAIZ,SAAD,IAAe;AACjD,QAAMa,UAAU,GAAGb,SAAS,CAACI,KAAV,CAAgB,CAAhB,EAAmBU,UAAtC;AACA,QAAMC,iBAAiB,GAAGF,UAAU,CAACG,KAAX,CAAiB,kCAAjB,EAAqD,CAArD,CAA1B;AACA,SAAQ,iCAAgCD,iBAAkB,EAA1D;AACD,CAJM;AAMP,OAAO,MAAME,YAAY,GAAIjB,SAAD,IAAe;AACzC,QAAMkB,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAApB;AACA,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA,WAAnB;AAAgCC,IAAAA,OAAhC;AAAyCC,IAAAA;AAAzC,MAA0DzB,SAAS,CAACI,KAAV,CAAgB,CAAhB,CAAhE;AACA,QAAMsB,SAAS,GAAG;AAChBC,IAAAA,EAAE,EAAEN,MADY;AAEhBO,IAAAA,IAAI,EAAE,MAFU;AAGhBC,IAAAA,WAAW,EAAEP,OAHG;AAIhBQ,IAAAA,QAAQ,EAAEP,WAJM;AAKhBQ,IAAAA,cAAc,EAAE,EALA;AAMhBC,IAAAA,IAAI,EAAER,OANU;AAOhBS,IAAAA,KAAK,EAAER;AAPS,GAAlB;AASA,QAAMS,eAAe,GAAGhB,WAAW,GAC/B,CAAC,GAAGiB,IAAI,CAACC,KAAL,CAAWlB,WAAX,CAAJ,EAA6BQ,SAA7B,CAD+B,GACW,CAACA,SAAD,CAD9C;AAEAP,EAAAA,YAAY,CAACkB,OAAb,CAAqB,iBAArB,EAAwCF,IAAI,CAACG,SAAL,CAAeJ,eAAf,CAAxC;AACD,CAfM;AAiBP,OAAO,MAAMK,kBAAkB,GAAIZ,EAAD,IAAQ;AACxC,QAAMT,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAApB;AACA,QAAMoB,QAAQ,GAAGL,IAAI,CAACC,KAAL,CAAWlB,WAAX,EAAwBb,MAAxB,CAAgCoC,QAAD,IAAcA,QAAQ,CAACd,EAAT,KAAgBA,EAA7D,CAAjB;AACAR,EAAAA,YAAY,CAACkB,OAAb,CAAqB,iBAArB,EAAwCF,IAAI,CAACG,SAAL,CAAeE,QAAf,CAAxC;AACD,CAJM","sourcesContent":["export const filterIngredientsFunc = (returnAPI) => {\n  if (returnAPI) {\n    const mealsIngredients = Object.entries(returnAPI.meals[0])\n      .filter((key) => key[0].includes('strIngredient') && key[1])\n      .map((e) => e[1]);\n    return mealsIngredients;\n  }\n};\n\nexport const filterMeasuresFunc = (returnAPI) => {\n  if (returnAPI) {\n    const mealsMeasures = Object.entries(returnAPI.meals[0])\n      .filter((key) => key[0].includes('strMeasure') && key[1])\n      .map((e) => e[1]);\n    return mealsMeasures;\n  }\n};\n\nexport const youtubeLinkConverter = (returnAPI) => {\n  const youtubeAPI = returnAPI.meals[0].strYoutube;\n  const youtubeAPISlipted = youtubeAPI.split('https://www.youtube.com/watch?v=')[1];\n  return `https://www.youtube.com/embed/${youtubeAPISlipted}`;\n};\n\nexport const favoriteFood = (returnAPI) => {\n  const arrayRecipe = localStorage.getItem('favoriteRecipes');\n  const { idMeal, strArea, strCategory, strMeal, strMealThumb } = returnAPI.meals[0];\n  const newRecipe = {\n    id: idMeal,\n    type: 'food',\n    nationality: strArea,\n    category: strCategory,\n    alcoholicOrNot: '',\n    name: strMeal,\n    image: strMealThumb,\n  };\n  const favoriteRecipes = arrayRecipe\n    ? [...JSON.parse(arrayRecipe), newRecipe] : [newRecipe];\n  localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteRecipes));\n};\n\nexport const removeFavoriteFood = (id) => {\n  const arrayRecipe = localStorage.getItem('favoriteRecipes');\n  const newArray = JSON.parse(arrayRecipe).filter((filtered) => filtered.id !== id);\n  localStorage.setItem('favoriteRecipes', JSON.stringify(newArray));\n};\n"]},"metadata":{},"sourceType":"module"}